
#ifndef SELAPI_H
#define SELAPI_H

#ifndef MAPTYPE_H
  #include "maptype.h"     // Описание структур интерфейса MAPAPI
#endif

#ifndef Mmstruct_H
  #include "mmstruct.h"    
#endif


//#ifdef WIN32API                               
extern "C"
{

 // Установить фильтр отображаемых объектов карты
 // hmap    - идентификатор открытой векторнй карты
 // parm    - параметры задачи (см. maptype.h)
 // note    - адрес переменной,определяющей вид окна и содержащей
 //           индекс активной закладки при старте программы фильтра (допустимо note = 0).
 // restoremode - флаг восстановления контекста отображения карты :
 //           "-1" - стандартно восстановить контекст отображения;
 //           "0"  - использовать текущее состояние контекста отображения.
 // Если фильтр изменился, возвращает ненулевое значение

 long int _export WINAPI selSetViewStaffEx(HMAP hmap,
											TASKPARM* parm,
                                 long int* note,
                                 long int restoremode);

 // Установить фильтр отображения объектов карты
 // hmap    - идентификатор открытой векторнй карты
 // parm    - параметры задачи (см. maptype.h)
 // note    - адрес переменной,определяющей вид окна и содержащей
 //           индекс активной закладки при старте программы фильтра
 //           (допустимо note = 0).
 // Если фильтр изменился, возвращает ненулевое значение
 long int _export WINAPI selSetViewStaff(HMAP hmap, TASKPARM* parm,
                                        long int* note);

 // Установить фильтр поиска объектов карты
 // Фильтр поиска объектов карты автоматически восстанавливается/запоминается в
 // служебном файле при старте/завершении программы.
 // hmap - идентификатор открытой векторной карты
 // note - адрес переменной,определяющей вид окна фильтра.
 //        Служит для запоминания/восстановления индекса активной закладки
 //        при старте программы фильтра.(Допустимо note = 0).
 // Возвращает: "1" - выбран режим поиска объектов;
 //             "2" - выбран режим выделения объектов карты;
 //             "0" - ошибка или отказ.

 long int _export WINAPI selSetObjectsSearch(HMAP hmap,
                                             TASKPARM* parm,
                                             long int* note);

 // Расширенная установка фильтра поиска объектов карты
 // Фильтр поиска объектов карты автоматически восстанавливается/запоминается в
 // служебном файле при старте/завершении программы.
 // Для изменения стандартных операций  восстановления используется
 // структура RESTOREMODE.
 // hmap - идентификатор открытой векторной карты;
 // parm - параметры задачи (см. maptype.h);
 // mode - параметры восстановления фильтра;
 // Возвращает: "1" - выбран режим поиска объектов;
 //             "2" - выбран режим выделения объектов карты;
 //             "0" - ошибка или отказ.

 long int _export WINAPI selSetObjectsSearchEx(HMAP hmap,
                                             TASKPARM* parm,
                                             RESTOREMODE* mode);

 // Установить параметры поиска объектов карты по области
 // hmap      - идентификатор открытой векторной карты;
 // parm      - параметры задачи (см. maptype.h);
 // hobj      - данные области поиска;
 // areaparms - параметры поиска по области;
 // hwnd      - идентификатор окна назначения сообщений WM_PROGRESSBAR
 // Возвращает: "1" - выбран режим поиска объектов;
 //             "2" - выбран режим выделения объектов карты;
 //             "3" - выбран режим выбора области;
 //             "0" - ошибка или отказ.

 long int _export WINAPI selSearchObjectByArea(TASKPARM* parm, HMAP hmap, HOBJ hobj,
                              					  HWND hwnd, AREASEEKPARM* areaparms);

 // Установить фильтр объектов карты
 // В контексте фильтра HSELECT должна быть установлена карта.
 // title - заголовок окна фильтра объектов карты,
 // если == 0, устанавливается стандартный заголовок.
 // Если фильтр изменился, возвращает ненулевое значение

 long int _export WINAPI selSetFilterTitle(TASKPARM* parm,
                              				 HSELECT hselect, HMAP hmap,
                              				 char* title);

 // Установить фильтр слоев карты
 // hwnd      - идентификатор родительского окна;
 // hrsc      - идентификатор классификатора ресурсов карты;
 // hselect   - идентификатор контекста поиска карты (фильтр);
 // title     - заголовок формы фильтра слоев карты;
 // hinstance - идентификатор библиотеки (dll) ресурсов формы фильтра.

 long int _export WINAPI selSetLayersFilter(HWND hwnd, HRSC hrsc,
                             					 HSELECT hselect, char *title,
                                				 HINSTANCE hinstance);

 // Восстановить параметры отображения карты
 // hmap - идентификатор открытой векторной карты
 // При ошибке возвращает ноль

 long int _export WINAPI selRestoreSelect(HMAP hmap);

 // Сохранить параметры отображения объектов
 // hmap - идентификатор открытой векторной карты
 // При ошибке возвращает ноль

 long int _export WINAPI selSaveSelect(HMAP hmap);

 // Выбор из классификатора карты семантической характеристики
 // hrsc - идентификатор классификатора ресурсов карты;
 // parm - параметры задачи (см. maptype.h).
 // При успешном выполнении возвращает код выбранной семантики,
 // иначе - "-1".
 long int _export WINAPI selSemanticSelect(HRSC hrsc,	TASKPARM* parm);

 // Выбор из классификатора карты семантической
 // характеристики c предустановленным кодом семантики.
 // hrsc - идентификатор классификатора ресурсов карты;
 // parm - параметры задачи (см. maptype.h);
 // code - предустановленное значение кода характеристики
 //       (при открытии формы данный код характеристики будет выбран).
 // При успешном выполнении возвращает код выбранной семантики,
 // иначе - "-1".
 long int _export WINAPI selSemanticSelectInit(HRSC hrsc,
															 TASKPARM* parm,
															 long int code);

 // Выбор из классификатора карты семантической
 // характеристики по фильтру семантик.
 // hrsc   - идентификатор классификатора ресурсов карты;
 // parm   - параметры задачи (см. maptype.h);
 // filter - массив кодов семантик для выбора (фильтр);
 // count  - количество элементов в массиве filter.
 // При успешном выполнении возвращает код выбранной семантики,
 // иначе - "-1".
 long int _export WINAPI selSemanticSelectFilter(HRSC hrsc,
																TASKPARM* parm,
																long int *filter,
																long int count);

 // Выбор из классификатора карты семантической
 // характеристики по фильтру семантик c предустановленным кодом семантики.
 // hrsc   - идентификатор классификатора ресурсов карты;
 // parm   - параметры задачи (см. maptype.h);
 // code   - предустановленное значение кода характеристики
 //          (при открытии формы данный код характеристики будет выбран);
 // filter - массив кодов семантик для выбора (фильтр);
 // count  - количество элементов в массиве filter.
 // При успешном выполнении возвращает код выбранной семантики,
 // иначе - "-1".
 long int _export WINAPI selSemanticSelectFilterInit(HRSC hrsc,
																TASKPARM* parm,
																long int code,
																long int *filter,
																long int count);

#ifdef LINUXAPI                   
 // Установить фильтр поиска объектов карты
 // Фильтр поиска объектов карты автоматически восстанавливается/запоминается в
 // служебном файле при старте/завершении программы.
 // hmap - идентификатор открытой векторной карты
 // note - адрес переменной,определяющей вид окна фильтра.
 //        Служит для запоминания/восстановления индекса активной закладки
 //        при старте программы фильтра.(Допустимо note = 0).
 // Возвращает: "1" - выбран режим поиска объектов;
 //             "2" - выбран режим выделения объектов карты;
 //             "0" - ошибка или отказ.

 long int _export selSetAreaFilter(HMAP hmap, TASKPARM* parm, long int* note);
#endif

}       // extern "C"

//#endif                              
#endif  // SELAPI_H
