
#ifndef LISTAPI_H
#define LISTAPI_H

#ifndef MAPTYPE_H
  #include "maptype.h"   // Описание структур интерфейса MAPAPI
#endif


// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// +++++ ОПИСАНИЕ ФУНКЦИЙ АКТИВИЗАЦИИ ДИАЛОГОВЫХ ОКОН ++++++
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++


typedef struct MAPLISTPARM  // ПАРАМЕТРЫ СОЗДАНИЯ ДИАЛОГА "СПИСОК ДАННЫХ"
{
  HWND     Window;       // Идентификатор окна документа
  long int PageNumber;   //  Номер активной закладки при открытии диалога "СПИСОК ДАННЫХ"
                         //  0 - активизируется закладка "СПИСОК РАСТРОВ"
                         //  1 - активизируется закладка "СПИСОК МАТРИЦ"
                         //  2 - активизируется закладка "СПИСОК ПК"
  char SaveMtrPath[MAX_PATH];  // Месторасположение
  char SaveRstPath[MAX_PATH];  // добавляемых
  char SaveSitPath[MAX_PATH];  // данных
  char SaveTinPath[MAX_PATH];  

  long int RstPageNumber;//  В закладке "СПИСОК РАСТРОВ" отображать
                         //  вид(параметры) растра  - 0(1);
  long int MtrPageNumber;//  В закладке "СПИСОК МАТРИЦ" отображать
                         //  вид(параметры) матрицы  - 0(1);
  long int SitPageNumber;//  В закладке "СПИСОК ПК" отображать
                         //  вид(параметры) ПК  - 0(1);
  long int TinPageNumber;  

  long int RstNumber;    //  Номер активного растра в закладке "СПИСОК РАСТРОВ"
  long int MtrNumber;    //  Номер активной матрицы в закладке "СПИСОК МАТРИЦ"
  long int SitNumber;    //  Номер активной ПК в закладке "СПИСОК ПК"
  long int TinNumber;    

  DOUBLEPOINT CentrePosition;// Координаты центра окна в метрах в районе
}
  MAPLISTPARM;


typedef struct PALETTECNTPARM  // ПАРАМЕТРЫ СОЗДАНИЯ ДИАЛОГА "УПРАВЛЕНИЕ ПАЛИТРОЙ"
{
  HWND     Window;                 // Идентификатор окна документа

  COLORREF ColorOfSelectObject;    // Цвет выбранных объектов
  COLORREF ColorOfSelectedObjects; // Цвет отмеченных объектов
  COLORREF ColorOfSetObjects;      // Цвет набора объектов  
                                   
  long     ThickOfSelectObject;    // Толщина линии выбранных объектов
}
  PALETTECNTPARM;

typedef struct LINEOFLIST     
{
  long int OldNumber;
  char Name[MAX_PATH];
}  LINEOFLIST;


extern "C"
{
 //            ДИАЛОГ "СПИСОК ДАННЫХ ЭЛЕКТРОННОЙ КАРТЫ"
 // Загрузка диалога "Список данных электронной карты" из приложения
 // Диалог содержит :
 //            закладку "Список растров",
 //            закладку "Список матриц",
 //            закладку "Список пользовательских карт"
 // и перечень функций и методов для работы с растровыми, матричными
 // и пользовательскими картами.
 // При ошибке возвращает ноль
 //
 // При изменении габаритов района(добавление/закрытие карт)
 // из диалога "Список данных электронной карты" посылаются
 // окну документа (maplistparm->Window) сообщения:
 //    -  WM_MOVEDOC(0x601) Отображение участка карты с заданной точкой
 //               в центре окна.
 //       WPARAM - указатель на заданную точку типа DOUBLEPOINT
 //       КООРДИНАТЫ ТОЧКИ В СИСТЕМЕ ИЗОБРАЖЕНИЯ В ПИКСЕЛАХ
 //
 //    -  MT_CHANGEDATA(0x65D) Извещение об изменении состава данных
 //       WPARAM,LPARAM не используются.

 // ОСОБЫЙ СЛУЧАЙ !!! 
 // Если используется #define BUILD_DATALIST, то:
 //     При изменении габаритов района(добавление/закрытие карт)
 //     из диалога "Список данных электронной карты" посылаются
 //     окну документа (maplistparm->Window) сообщения:
 //       -  (0x827) Отображение участка карты с заданной точкой
 //               в центре окна.
 //       WPARAM - указатель на заданную точку типа DOUBLEPOINT
 //       КООРДИНАТЫ ТОЧКИ В СИСТЕМЕ ИЗОБРАЖЕНИЯ В ПИКСЕЛАХ
 //
 //       -  (0x82E) Извещение об изменении состава данных
 //       WPARAM,LPARAM не используются.

 //     При активизации соответствующих пунктов всплывающего меню
 //     диалога "Список данных электронной карты",
 //     из диалога "Список данных электронной карты" посылаются
 //     окну документа (maplistparm->Window) сообщения:
 //       -  (0x620)  сообщение от пункта меню "Позиционирование по одной точке"
 //       -  (0x621)  сообщение от пункта меню "Позиционирование по двум точкам"
 //       -  (0x622)  сообщение от пункта меню "Установить рамку по заданному контуру"
 //       -  (0x623)  сообщение от пункта меню "Установить рамку по выбранному объекту"

 long int _export WINAPI  LoadMapListDialog(HMAP hMap,
                                           MAPLISTPARM* maplistparm,
                                           TASKPARM* parm);

 // --------------------------------------------------------------
 // Загрузка диалога "Управление палитрой" из Панорамы(приложения)
 // Диалог содержит :
 // - закладку "Управление служебной палитрой"
 //  (изменение цвета фона карты, цвета выбранного объекта,
 //   цвета отмеченных объектов,толщину линии выделения
 //   выбранного или отмеченного объекта);
 // - закладку "Управление палитрой карты";
 // - закладку "Управление палитрой матрицы";
 // - закладку "Управление палитрой растра".
 //
 // После успешного выполнения функции в структуре paletteParm
 // сохраняются установленные в диалоге "Управление палитрой"
 // значения: Цвета выбранных объектов, Цвета отмеченных объектов,
 //           Толщины линии выбранных объектов
 //
 // При ошибке возвращает ноль
 // --------------------------------------------------------------
 long int _export WINAPI  LoadPaletteControl(HMAP hMap,
                                   PALETTECNTPARM* paletteParm,
                                   TASKPARM* parm);

 // --------------------------------------------------------------
 // Загрузка диалога "Управление палитрой" с активизацией необходимой закладки
 // Диалог содержит :
 // - закладку "Управление служебной палитрой"
 //  (изменение цвета фона карты, цвета выбранного объекта,
 //   цвета отмеченных объектов,толщину линии выделения
 //   выбранного или отмеченного объекта);
 // - закладку "Управление палитрой карты";
 // - закладку "Управление палитрой матрицы";
 // - закладку "Управление палитрой растра".
 // Структуры PALETTECNTPARM  и TASKPARM описаны в maptype.h
 // pageNumber - Номер активной закладки при открытии диалога "Управление палитрой"
 //              0 - активизируется закладка "Управление служебной палитрой"
 //                   (изменение цвета фона карты, цвета выбранного объекта,
 //                   цвета отмеченных объектов,толщину линии выделения
 //                   выбранного или отмеченного объекта);
 //              1 - активизируется закладка "Управление палитрой карты";
 //              2 - активизируется закладка "Управление палитрой матрицы";
 //              3 - активизируется закладка "Управление палитрой растра".
 // number - Номер активного файла (растра, матрицы, ПК) в текущей закладке
 //          Если number == 0, то активизируется закладка "Управление служебной палитрой"
 //          Исключение составляет Карта. Ее номер 0.
 //          В закладке "Управление палитрой матрицы" не используется.
 // При ошибке возвращает ноль
 // -------------------------------------------------------------- 
 long int _export WINAPI  LoadPaletteControlEx(HMAP hMap,
                                   PALETTECNTPARM* paletteParm,
                                   TASKPARM* parm,
                                   long int pageNumber,
                                   long int number);


// -------------------------------------------------------------- 
// Загрузка диалога "Границы видимости"
// При ошибке возвращает ноль
// -------------------------------------------------------------- 
 long int _export WINAPI  LoadDialogScaleView(HMAP hMap, HWND handle, TASKPARM * parm,
                                              long int * topScale, long int * bottomScale,
                                              char* title);

}

#define LEVEL_RSW         0xFFFFFFFD // Ветка "Растр"             
#define LEVEL_RSWQUALITY  0xFFFFFFFE // Ветка "Растры качеств"
#define LEVEL_RSWVIEW     0xFFFFFFFF // Ветка "Растры зоны видимости"


#endif


