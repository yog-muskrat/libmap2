
// ИЗМЕНЕНИЯ СТРУКТУР MAPREGISTER И LISTREGISTER НЕ ДОПУСКАЮТСЯ !

#if !defined(MAPCREAT_H)
#define MAPCREAT_H

#ifndef MAPTYPE_H
  #include "maptype.h"
#endif

// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// +++++  ТАБЛИЦЫ КОДОВ ЭЛЕКТРОННОЙ КАРТЫ  +++++++++++++++++
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++

// Типы флага "Тип карты"
  typedef enum MAPTYPE
  {
   //UNDEFINED   = -1,      // Не установлено
   TOPOGRAPHIC  = 1,      // Топографическая
   CK_42        = 1,      // Система координат 42 года
   GEOGRAPHIC   = 2,      // Обзорно-географическая
   GLOBE        = 3,      // Космонавигационная (ГЛОБУС)
   CITYPLAN     = 4,      // Топографический план города
   LARGESCALE   = 5,      // Крупномасштабный план местности
   AERONAUTIC   = 6,      // Аэронавигационная
   SEANAUTICOLD = 7,      // Морская навигационная
   AVIATION     = 8,      // Авиационная
   BLANK        = 9,      // Бланковка
   UTMNAD27     = 10,     // UTM на North American Datum 1927
   UTMWGS84     = 11,     // UTM на WGS84
   UTMTYPE      = 12,     // UTM на своём эллипсоиде 
   CK_63        = 13,     // Система координат 63 года  
   CK_95        = 14,     // Система координат 95 года 
   TOPOLOCAL    = 15,     // Топографическая с произвольной главной точкой, требует осевой меридиан
   LATLONG      = 16,     // Обзорно-географическая Широта/Долгота
   WORLDMAP     = 17,     // Карта Мира (Цилиндрическая Миллера), можно выбрать эллипсоид
   MCK_CK63     = 18,     // Местная система координат на базе СК-63
   MERCATOR     = 19,     // Цилиндрическая Меркатора (EPSG:3395, EPSG:3857)
   SEANAUTIC    = 20,     // Морская навигационная (Mercator_2SP), можно выбрать эллипсоид
                          // (Цилиндрическая равноугольная Меркатора на эллипсоиде WGS84)
   GSKMAP       = 21,     // Карта в системе координат ГСК-2011
   MAPTYPELIMIT = 21      // Крайнее значение типа карты                    // 12/01/12
  }
   MAPTYPE;


  // Типы флага "Проекция исходного материала"
  typedef enum MAPPROJECTION
  {
// UNDEFINED          = -1, // Не установлено
   GAUSSCONFORMAL      = 1, // Равноугольная Гаусса-Крюгера
   CONICALORTHOMORPHIC = 2, // Коническая равноугольная (устарела, применять 22)
   CYLINDRICALSPECIAL  = 3, // Цилиндрическая специальная для космонавигационной карты масштаба 40 млн. (код устарел)
   LAMBERT             = 4, // Азимутальная поперечная равновеликая (Ламберта) (код устарел, применять 30)
   STEREOGRAPHIC       = 5, // Азимутальная прямая равноугольная (Стереографическая)
   POSTEL              = 6, // (Нормальная) равнопромежуточная азимутальная проекция Постеля
   AZIMUTHALOBLIQUE    = 7, // Азимутальная равнопромежуточная косая (код устарел, применять 30)
   MERCATORMAP         = 8, // Цилиндрическая прямая равноугольная Меркатора (код устарел, применять 36)
   URMAEV              = 9, // Цилиндрическая произвольная(проф.Урмаева)(код устарел, применять 25)
   POLYCONICAL         =10, // Поликоническая проекция ЦНИИГАиК (код устарел, применять 29)
   SIMPLEPOLYCONICAL   =11, // Простая видоизмененная поликоническая (код устарел, применять 29)
   PSEUDOCONICAL       =12, // Псевдоконическая произвольная
   STEREOGRAPHICPOLAR  =13, // Стереографическая полярная
   CHEBISHEV           =14, // Равноугольная Чебышева
   GNOMONIC            =15, // Гномоническая (центральная точка 60,80 градусов)
   CYLINDRICALSPECIALBLANK =16, // Цилиндрическая специальная для бланковой карты
   UTM                 =17,  // UTM                         
   KAVRAJSKY           =18,  // Псевдоцилиндрическая равновеликая синусоидальная Каврайского
   MOLLWEIDE           =19,  // Псевдоцилиндрическая равновеликая эллиптическая Мольвейде
   CONICALEQUIDISTANT  =20,  // (Прямая) равнопромежуточная коническая проекция
   CONICALEQUALAREA    =21,  // (Прямая) равновеликая коническая проекция
   CONICALDIRECTORTHOMORPHIC   =22, // (Прямая) равноугольная коническая проекция
   AZIMUTHALORTHOMORPHICPOLAR  =23, // Полярная равноугольная азимутальная (стереографическая) проекция
   LAMBERTAZIMUTHALEQUALAREA   =24, // (Нормальная) равновеликая азимутальная проекция Ламберта (код устарел, применять 30)
   URMAEVSINUSOIDAL            =25, // Псевдоцилиндрическая синусоидальная проекция Урмаева для карт океанов(Тихого и Индийского)
   AITOFF                      =26, // Производная равновеликая проекция Аитова-Гамера
   CYLINDRICALEQUALSPACED      =27, // Равнопромежуточная цилиндрическая проекция
   LAMBERTCYLINDRICALEQUALAREA =28, // Равновеликая цилиндрическая проекция Ламберта
   MODIFIEDPOLYCONICAL         =29, // Видоизмененная простая поликоническая проекция (международная)
   LAMBERTOBLIQUEAZIMUTHAL     =30, // Косая равновеликая азимутальная проекция Ламберта
   TRANSVERSECYLINDRICAL       =31, // Равноугольная поперечно-цилиндрическая проекция       
   GAUSSCONFORMAL_SYSTEM_63    =32, // Равноугольная топографическая для системы координат 63 года
   LATITUDELONGITUDE           = 33, // Широта/Долгота Цилиндрическая на шаре (Popular Visualisation Pseudo Mercator EPSG:3857)   // 15/04/10
   MILLERCYLINDRICAL           = 34, // Цилиндрическая Миллера на шаре ESRI:54003               // 22/12/10
   WORLDMERCATOR               = 35, // Цилиндрическая прямая равноугольная Меркатора (MERCATOR_1SP - используется, например в EPSG:3395)
   MERCATOR_2SP                = 36, // Цилиндрическая прямая равноугольная Меркатора  
   WEBMERCATOR                 = 37, // (Google) Popular Visualisation Pseudo Mercator EPSG:3857 (900913)

   LASTPROJECTIONNUMBER        = 37 // Крайний номер проекции
  }
    MAPPROJECTION;

  // Типы флага "Вид эллипсоида"
  typedef enum ELLIPSOIDKIND
  {
   UNDEFINED   = -1,       // Не установлено
   KRASOVSKY42 =  1,       // Красовского 1942г.
   WGS_76      =  2,       // Международный 1976г.
   HEFORD      =  3,       // Хейфорда 1909г.
   CLARKE_80   =  4,       // Кларка 1880г.
   CLARKE_66   =  5,       // Кларка 1866г.
   EVEREST_57  =  6,       // Эвереста 1857г.
   BESSEL      =  7,       // Бесселя 1841г.
   AIRY        =  8,       // Эри 1830г.
   WGS_84      =  9,        // Международный 1984г.
   SGS_85        = 10,     // ПЗ-90.02
   GRS_80        = 11,     // GRS80         (6378137.0, 298.257222101)
   IERS_96       = 12,     // IERS 1996г.   (6378136.49, 298.25645)
   INTER_1924    = 13,     // Международный 1924г. (6378388.0, 297.00)
   SOUTHAM_69    = 14,     // Южно-Американский 1969г. (6378160.0, 298.25)
   INDONESIAN_74 = 15,     // Индонезийский 1974г. (6378160.0,  298.247)
   HELMERT       = 16,     // Гельмерта 1906г. (6378200.0,  298.3)
   FISCHER_60M   = 17,     // Фишера 1960г. Modified (6378155.0,  298.3)
   FISCHER_68    = 18,     // Фишера 1968г. (6378150.0,  298.3)
   HOUGH         = 19,     // Хаф 1960г. (6378270.0,  297.0)
   EVEREST_30    = 20,     // Эвереста 1830г. (6377276.345,  300.8017)
   AUSTRALIAN    = 21,     // Австралийский национальный (6378160.0,  298.25)
   CGCS2000       = 22,    // CGCS2000
   AIRYM          = 23,    // Airy Modified
   BESSELM        = 24,    // Bessel Modified
   BESSELNAMIBIA  = 25,    // Bessel Namibia
   BESSELGLM      = 26,    // Bessel Namibia (GLM)
   CLARKE1880ARC  = 27,    // Clarke 1880 (Arc)
   CLARKE1880SGA22 = 28,   // Clarke 1880 (SGA 1922)
   EVEREST1830D67 = 29,    // Everest 1830 (1967 Definition)
   EVEREST1830M   = 30,    // Everest 1830 Modified
   EVEREST1830RSO69 = 31,  // Everest 1830 (RSO 1969)
   EVEREST1830D75 = 32,    // Everest 1830 (1975 Definition)
   NWL9D          = 33,    // NWL 9D
   PLESSIS1817    = 34,    // Plessis 1817
   STRUVE1860     = 35,    // Struve 1860
   WAROFFICE      = 36,    // War Office
   GEM10C         = 37,    // GEM 10C
   OSU86F         = 38,    // OSU86F
   OSU91A         = 39,    // OSU91A
   GRS_67         = 40,    // GRS 1967
   ATS_77         = 41,    // Average Terrestrial System 1977
   IAG_75         = 42,    // IAG 1975
   GRS_67M        = 43,    // GRS 1967 Modified
   DANISH1876     = 44,    // Danish 1876
   SPHERE_WGS_84  = 45,    // Шар с радиусом, равным большой полуоси WGS-84
   ELLIPSOID_GSK  = 46,    // ГСК-2011
   ELLIPSOID_EC9011 = 47,  // ПЗ 90.11
   ELLIPSOIDCOUNT = 47,
   
   USERELLIPSOID  = 1000,  // Произвольный (пользовательский) эллипсоид

   //KRASOVSKY42_95 = 1001,  // Красовского 1940г. СК-95
   //EC90TEMP       = 1002  // ПЗ-90
  }
   ELLIPSOIDKIND;

  // Типы флага "Система высот"
  typedef enum HEIGHTSYSTEM
  {
/// UNDEFINED   = -1,       // Не установлено
   BALTIC      =  1,       // Балтийская система высот
   AUSTRALIA   =  2,       // Австралийская система высот 1971г.                    // 26/10/12
   ADRIATIC    =  3,       // Средний уровень Адриатического моря в Триесте (Австрия, Югославия)
   NORTHSEA    =  4,       // Средний уровень Северного моря в Остенде "Зеро-Нормаль"
   OSTEND      =  5,       // Средний уровень низких вод Северного моря в Остенде -   "Нуль понт де шоссе" ( Бельгия)
   LAMANSH     =  6,       // Средний уровень моря в проливе Ламанш
   BELFAST     =  7,       // Средний уровень Ирландского моря в Белфасте (Северная   Ирландия)
   MALIKXED    =  8,       // Средний уровень Атлантического океана в Малик-Xед (Ирландия)
   DUBLIN      =  9,       // Уровень низкой воды в Дублинском заливе (Ирландия)
   AEGEAN      = 10,       // Средний уровень Эгейского моря в порту Пирей (Греция)
   DENMARK     = 11,       // Средний уровень моря у датского побережья (Дания)
   ICELAND     = 12,       // Средний уровень залива Фахсафлоуи у Рейкьявика (Исландия)
   ALICANTE    = 13,       // Средний уровень Средиземного моря в Аликанте (Испания
   CANARY      = 14,       // Средний уровень Атлантического океана (для Канарских островов)
   GENOA       = 15,       // Средний уровень Лигурийского моря в Генуе (Италия)
   NORMALNULL  = 16,       // Средний уровень Северного моря - нуль Амстердамского футштока "Нормаль-Нуль" (Нидерланды, ФРГ)
   OSLO        = 17,       // Средний уровень моря в Осло - "Норвежский нормальный нуль" (Южная  Норвегия)
   NARVIK      = 18,       // Средний уровень моря в бухте Нарвик (Северная Норвегия)
   CASCAIS     = 19,       // Средний уровень Атлантического океана в Кашкаиш (Португалия)
   HELSINKI    = 20,       // Средний уровень Балтийского моря в Xельсинки (Финляндия)
   SWEDEN      = 21,       // Средний уровень воды у шведских берегов (Швеция)
   MARSEL      = 22,       // Средний уровень Средиземного моря в Марселе
   TURKEY      = 23,       // Средний уровень морей, омывающих Турцию (Турция)
   USAKANADA   = 24,       // Средний уровень морей и океанов,омывающих США и Канаду
   BALTIC77    = 25,       // Балтийская система 1977 г.
   OKHOTSK     = 26,       // Средний уровень Охотского моря и Тихого океана
   PEACEOCEAN  = 27        // Средний уровень мирового океана
  }
   HEIGHTSYSTEM;

  // Типы флага "Система координат"
  typedef enum COORDINATESYSTEM
  {
// UNDEFINED          = -1, // Не установлено
   ORTHOGONAL          = 1, // Система координат 42 года
   UNIVERSALMERCATOR   = 2, // Система проекции Меркатора (США - Universal Transverse Mercator)
   NATIONALGRID        = 3, // Национальная прямоугольная сетка Великобритании
   AREAORTHOGONAL      = 4, // Прямоугольная местная система координат
   SYSTEM_63           = 5, // Система координат 63 года
   CONDITION           = 6, // Прямоугольная условная для обзорных карт
   GEOCOORDINATE       = 7, // Геодезические координаты в радианах
   GEOCOORDINATEGRADUS = 8, // Геодезические координаты в градусах
   SYSTEM_95           = 9, // Система координат 95 года
   GSK                 = 10 // Система координат ГСК-2011
  }
   COORDINATESYSTEM;


  // Типы флага "Вид рамки"
  typedef enum FRAMEKIND
  {
// UNDEFINED    = -1,     // Не установлено
   TRAPEZE      = 1,      // Трапециевидная без точек излома
   TRAPEZECURVE = 2,      // Трапециевидная с точками излома
   RECTANGULAR  = 3,      // Прямоугольная
   CIRCLE       = 4,      // Круговая
   FREE         = 5       // Произвольная 
}
   FRAMEKIND;

typedef struct COORDINATES
{
  double Coord[4];
}
  COORDINATES;

// Число элементов в таблице масштабов
enum COUNTSCALE
{
  COUNTTOPO      = 9,        // Топографическая     
  COUNTGEOG      = 5,        // Обзорно-географическая
  COUNTAERO      = 2,        // Аэронавигационная
  COUNTCITYPLAN  = 3,        // Топографический план города     
  COUNTLARGE     = 5,        // КРупномасштабный план
  COUNTSCALENONE = 16        // Тип карт не установлен          
};

// Коды подсистем для обзорно-географических карт
enum GEOGRAPHICCODE     
{
// UNDEFINED    = -1,     // Не установлено
  EUROPE           = 1,    // блок Европа
  ASIA             = 2,    // блок Азия
  PACIFICOCEAN     = 3,    // Тихий океан
  AMERICANORTH     = 4,    // Северная Америка
  ATLANTICOCEAN    = 5,    // Атлантический океан
  NORTHPOLARSYSTEM = 6,    // Северная полярная подсистема
  SOUTHPOLARSYSTEM = 7,    // Южная полярная подсистема
  EQUATORIALSYSTEM = 8     // Экваториальная подсистема
};

typedef struct REGISTERTYPES
{
  // Типы флага соответствия проекции
  enum PROJECTION
  {
	  NOADEQUACY = 0,   // Данные не соответствуют проекции
   ADEQUACY   = 1    // Данные соответствуют проекции
  };


// Типы флага "Тип карты"
  enum MAPTYPE
  {
  // UNDEFINED   = -1,      // Не установлено
   TOPOGRAPHIC  = 1,      // Топографическая
   CK_42        = 1,      // Система координат 42 года
   GEOGRAPHIC   = 2,      // Обзорно-географическая
   GLOBE        = 3,      // Космонавигационная (ГЛОБУС)
   CITYPLAN     = 4,      // Топографический план города
   LARGESCALE   = 5,      // Крупномасштабный план местности
   AERONAUTIC   = 6,      // Аэронавигационная
   SEANAUTICOLD = 7,      // Морская навигационная
   AVIATION     = 8,      // Авиационная
   BLANK        = 9,      // Бланковка
   UTMNAD27     = 10,     // UTM на North American Datum 1927
   UTMWGS84     = 11,     // UTM на WGS84
   UTMTYPE      = 12,     // UTM на своём эллипсоиде 
   CK_63        = 13,     // Система координат 63 года  
   CK_95        = 14,     // Система координат 95 года 
   TOPOLOCAL    = 15,     // Топографическая с произвольной главной точкой, требует осевой меридиан
   LATLONG      = 16,     // Обзорно-географическая Широта/Долгота
   WORLDMAP     = 17,     // Карта Мира (Цилиндрическая Миллера), можно выбрать эллипсоид
   MCK_CK63     = 18,     // Местная система координат на базе СК-63
   MERCATOR     = 19,     // Цилиндрическая Меркатора (EPSG:3395, EPSG:3857), можно выбрать эллипсоид
   SEANAUTIC    = 20,     // Морская навигационная (Mercator_2SP), можно выбрать эллипсоид
                          // (Цилиндрическая равноугольная Меркатора на эллипсоиде WGS84)
   GSKMAP       = 21,     // Карта в системе координат ГСК-2011
   MAPTYPELIMIT = 21      // Крайнее значение типа карты                    // 12/01/12
  };
  
  // Типы флага "Система координат"
  enum COORDINATESYSTEM
  {
  // UNDEFINED          = -1, // Не установлено
   ORTHOGONAL          = 1, // Система координат 42 года
   UNIVERSALMERCATOR   = 2, // Система проекции Меркатора (США - Universal Transverse Mercator)
   NATIONALGRID        = 3, // Национальная прямоугольная сетка Великобритании
   AREAORTHOGONAL      = 4, // Прямоугольная местная система координат
   SYSTEM_63           = 5, // Система координат 63 года
   CONDITION           = 6, // Прямоугольная условная для обзорных карт
   GEOCOORDINATE       = 7, // Геодезические координаты в радианах
   GEOCOORDINATEGRADUS = 8, // Геодезические координаты в градусах
   SYSTEM_95           = 9, // Система координат 95 года
   GSK                 = 10 // Система координат ГСК-2011
  };

    // Типы флага "Проекция исходного материала"
  enum MAPPROJECTION
  {
// UNDEFINED          = -1, // Не установлено
   GAUSSCONFORMAL      = 1, // Равноугольная Гаусса-Крюгера
   CONICALORTHOMORPHIC = 2, // Коническая равноугольная (устарела, применять 22)
   CYLINDRICALSPECIAL  = 3, // Цилиндрическая специальная для космонавигационной карты масштаба 40 млн. (код устарел)
   LAMBERT             = 4, // Азимутальная поперечная равновеликая (Ламберта) (код устарел, применять 30)
   STEREOGRAPHIC       = 5, // Азимутальная прямая равноугольная (Стереографическая)
   POSTEL              = 6, // (Нормальная) равнопромежуточная азимутальная проекция Постеля
   AZIMUTHALOBLIQUE    = 7, // Азимутальная равнопромежуточная косая (код устарел, применять 30)
   MERCATORMAP         = 8, // Цилиндрическая прямая равноугольная Меркатора (код устарел, применять 36)
   URMAEV              = 9, // Цилиндрическая произвольная(проф.Урмаева)(код устарел, применять 25)
   POLYCONICAL         =10, // Поликоническая проекция ЦНИИГАиК (код устарел, применять 29)
   SIMPLEPOLYCONICAL   =11, // Простая видоизмененная поликоническая (код устарел, применять 29)
   PSEUDOCONICAL       =12, // Псевдоконическая произвольная
   STEREOGRAPHICPOLAR  =13, // Стереографическая полярная
   CHEBISHEV           =14, // Равноугольная Чебышева
   GNOMONIC            =15, // Гномоническая (центральная точка 60,80 градусов)
   CYLINDRICALSPECIALBLANK =16, // Цилиндрическая специальная для бланковой карты
   UTM                 =17,  // UTM                         
   KAVRAJSKY           =18,  // Псевдоцилиндрическая равновеликая синусоидальная Каврайского
   MOLLWEIDE           =19,  // Псевдоцилиндрическая равновеликая эллиптическая Мольвейде
   CONICALEQUIDISTANT  =20,  // (Прямая) равнопромежуточная коническая проекция
   CONICALEQUALAREA    =21,  // (Прямая) равновеликая коническая проекция
   CONICALDIRECTORTHOMORPHIC   =22, // (Прямая) равноугольная коническая проекция
   AZIMUTHALORTHOMORPHICPOLAR  =23, // Полярная равноугольная азимутальная (стереографическая) проекция
   LAMBERTAZIMUTHALEQUALAREA   =24, // (Нормальная) равновеликая азимутальная проекция Ламберта (код устарел, применять 30)
   URMAEVSINUSOIDAL            =25, // Псевдоцилиндрическая синусоидальная проекция Урмаева для карт океанов(Тихого и Индийского)
   AITOFF                      =26, // Производная равновеликая проекция Аитова-Гамера
   CYLINDRICALEQUALSPACED      =27, // Равнопромежуточная цилиндрическая проекция
   LAMBERTCYLINDRICALEQUALAREA =28, // Равновеликая цилиндрическая проекция Ламберта
   MODIFIEDPOLYCONICAL         =29, // Видоизмененная простая поликоническая проекция (международная)
   LAMBERTOBLIQUEAZIMUTHAL     =30, // Косая равновеликая азимутальная проекция Ламберта
   TRANSVERSECYLINDRICAL       =31, // Равноугольная поперечно-цилиндрическая проекция       
   GAUSSCONFORMAL_SYSTEM_63    =32, // Равноугольная топографическая для системы координат 63 года
   LATITUDELONGITUDE           = 33, // Широта/Долгота Цилиндрическая на шаре (Popular Visualisation Pseudo Mercator EPSG:3857)   // 15/04/10
   MILLERCYLINDRICAL           = 34, // Цилиндрическая Миллера на шаре ESRI:54003               // 22/12/10
   WORLDMERCATOR               = 35, // Цилиндрическая прямая равноугольная Меркатора (MERCATOR_1SP - используется, например в EPSG:3395)
   MERCATOR_2SP                = 36, // Цилиндрическая прямая равноугольная Меркатора  
   WEBMERCATOR                 = 37, // (Google) Popular Visualisation Pseudo Mercator EPSG:3857
   LASTPROJECTIONNUMBER        = 37 // Крайний номер проекции
  };


   // Типы флага "Вид эллипсоида"
  enum ELLIPSOIDKIND
  {
   UNDEFINED   = -1,       // Не установлено
   KRASOVSKY42 =  1,       // Красовского 1942г.
   WGS_76      =  2,       // Международный 1976г.
   HEFORD      =  3,       // Хейфорда 1909г.
   CLARKE_80   =  4,       // Кларка 1880г.
   CLARKE_66   =  5,       // Кларка 1866г.
   EVEREST_57  =  6,       // Эвереста 1857г.
   BESSEL      =  7,       // Бесселя 1841г.
   AIRY        =  8,       // Эри 1830г.
   WGS_84      =  9,        // Международный 1984г.
   SGS_85        = 10,     // ПЗ-90.02
   GRS_80        = 11,     // GRS80         (6378137.0, 298.257222101)
   IERS_96       = 12,     // IERS 1996г.   (6378136.49, 298.25645)
   INTER_1924    = 13,     // Международный 1924г. (6378388.0, 297.00)
   SOUTHAM_69    = 14,     // Южно-Американский 1969г. (6378160.0, 298.25)
   INDONESIAN_74 = 15,     // Индонезийский 1974г. (6378160.0,  298.247)
   HELMERT       = 16,     // Гельмерта 1906г. (6378200.0,  298.3)
   FISCHER_60M   = 17,     // Фишера 1960г. Modified (6378155.0,  298.3)
   FISCHER_68    = 18,     // Фишера 1968г. (6378150.0,  298.3)
   HOUGH         = 19,     // Хаф 1960г. (6378270.0,  297.0)
   EVEREST_30    = 20,     // Эвереста 1830г. (6377276.345,  300.8017)
   AUSTRALIAN    = 21,     // Австралийский национальный (6378160.0,  298.25)
   CGCS2000       = 22,    // CGCS2000
   AIRYM          = 23,    // Airy Modified
   BESSELM        = 24,    // Bessel Modified
   BESSELNAMIBIA  = 25,    // Bessel Namibia
   BESSELGLM      = 26,    // Bessel Namibia (GLM)
   CLARKE1880ARC  = 27,    // Clarke 1880 (Arc)
   CLARKE1880SGA22 = 28,   // Clarke 1880 (SGA 1922)
   EVEREST1830D67 = 29,    // Everest 1830 (1967 Definition)
   EVEREST1830M   = 30,    // Everest 1830 Modified
   EVEREST1830RSO69 = 31,  // Everest 1830 (RSO 1969)
   EVEREST1830D75 = 32,    // Everest 1830 (1975 Definition)
   NWL9D          = 33,    // NWL 9D
   PLESSIS1817    = 34,    // Plessis 1817
   STRUVE1860     = 35,    // Struve 1860
   WAROFFICE      = 36,    // War Office
   GEM10C         = 37,    // GEM 10C
   OSU86F         = 38,    // OSU86F
   OSU91A         = 39,    // OSU91A
   GRS_67         = 40,    // GRS 1967
   ATS_77         = 41,    // Average Terrestrial System 1977
   IAG_75         = 42,    // IAG 1975
   GRS_67M        = 43,    // GRS 1967 Modified
   DANISH1876     = 44,    // Danish 1876
   SPHERE_WGS_84  = 45,    // Шар с радиусом, равным большой полуоси WGS-84
   ELLIPSOID_GSK  = 46,    // ГСК-2011
   ELLIPSOID_EC9011 = 47,  // ПЗ 90.11
   ELLIPSOIDCOUNT = 47,
   
   USERELLIPSOID  = 1000,  // Произвольный (пользовательский) эллипсоид

   //KRASOVSKY42_95 = 1001,  // Красовского 1940г. СК-95
   //EC90TEMP       = 1002  // ПЗ-90
 };
 
  // Типы флага "Система высот"
  enum HEIGHTSYSTEM
  {
  // UNDEFINED   = -1,       // Не установлено
   BALTIC      =  1,       // Балтийская система высот
   AUSTRALIA   =  2,       // Австралийская система высот 1971г.                    // 26/10/12
   ADRIATIC    =  3,       // Средний уровень Адриатического моря в Триесте (Австрия, Югославия)
   NORTHSEA    =  4,       // Средний уровень Северного моря в Остенде "Зеро-Нормаль"
   OSTEND      =  5,       // Средний уровень низких вод Северного моря в Остенде -   "Нуль понт де шоссе" ( Бельгия)
   LAMANSH     =  6,       // Средний уровень моря в проливе Ламанш
   BELFAST     =  7,       // Средний уровень Ирландского моря в Белфасте (Северная   Ирландия)
   MALIKXED    =  8,       // Средний уровень Атлантического океана в Малик-Xед (Ирландия)
   DUBLIN      =  9,       // Уровень низкой воды в Дублинском заливе (Ирландия)
   AEGEAN      = 10,       // Средний уровень Эгейского моря в порту Пирей (Греция)
   DENMARK     = 11,       // Средний уровень моря у датского побережья (Дания)
   ICELAND     = 12,       // Средний уровень залива Фахсафлоуи у Рейкьявика (Исландия)
   ALICANTE    = 13,       // Средний уровень Средиземного моря в Аликанте (Испания
   CANARY      = 14,       // Средний уровень Атлантического океана (для Канарских островов)
   GENOA       = 15,       // Средний уровень Лигурийского моря в Генуе (Италия)
   NORMALNULL  = 16,       // Средний уровень Северного моря - нуль Амстердамского футштока "Нормаль-Нуль" (Нидерланды, ФРГ)
   OSLO        = 17,       // Средний уровень моря в Осло - "Норвежский нормальный нуль" (Южная  Норвегия)
   NARVIK      = 18,       // Средний уровень моря в бухте Нарвик (Северная Норвегия)
   CASCAIS     = 19,       // Средний уровень Атлантического океана в Кашкаиш (Португалия)
   HELSINKI    = 20,       // Средний уровень Балтийского моря в Xельсинки (Финляндия)
   SWEDEN      = 21,       // Средний уровень воды у шведских берегов (Швеция)
   MARSEL      = 22,       // Средний уровень Средиземного моря в Марселе
   TURKEY      = 23,       // Средний уровень морей, омывающих Турцию (Турция)
   USAKANADA   = 24,       // Средний уровень морей и океанов,омывающих США и Канаду
   BALTIC77    = 25,       // Балтийская система 1977 г.
   OKHOTSK     = 26,       // Средний уровень Охотского моря и Тихого океана
   PEACEOCEAN  = 27        // Средний уровень мирового океана
  };

  // Типы флага "Единицы измерения"
  enum UNIT
  {
// UNDEFINED     = -1,   // Не установлено
   KILOMETRE     = 5,    // Километры
   METRE05       = 4,    // 0.5 м
   METRE         = 0,    // Метры
   DECIMETRE     = 1,    // Дециметры
   CENTIMETRE    = 2,    // Сантиметры
   MILLIMETRE    = 3,    // Миллиметры
   SECOND01      = 66,   // 0.1 сек
   RADIAN        = 64,   // Радианы
   RADIAN8       = 67,   // 10e-8 рад
   DEGREE        = 65,   // Градусы
   FOOT          = 16    // Футы
  };


  // Типы флага "Вид рамки"
  enum FRAMEKIND
  {
// UNDEFINED    = -1,     // Не установлено
   TRAPEZE      = 1,      // Трапециевидная без точек излома
   TRAPEZECURVE = 2,      // Трапециевидная с точками излома
   RECTANGULAR  = 3,      // Прямоугольная
   CIRCLE       = 4       // Круговая
  };

  // Типы исходного материала
  // Вид источника информации
  enum MAPINITKIND
  {
    MAP     = 1,           // Картографический
    PHOTO   = 2,           // Фотоплан
    IMAGE   = 3,           // Фотоснимок
    GRAM    = 4            // Фотограмметрический
  };

  // Вид исходного карт/фотоматериала
  enum MAPINITTYPE
  {
   MAPRUN     = 1,        // Тиражный оттиск
   FINAL      = 2,        // Издательский оригинал
   MANUSCRIPT = 3,        // Составительский оригинал
   UPDATE     = 4,        // Оригинал изменений
   SPECIAL    = 5,        // Специальный оригинал
   CONSTANT   = 6,        // Диапозитив постоянного хранения
  };

  // Вид исходного фотоматериала
  enum PHOTOINITKIND
  {
   FGM        = 7,        // Фотограмметрический материал
   FGMMAPRUN  = 8,        // ФГМ и тиражный оттиск
   FGMMANUSCRIPT = 9,     // ФГМ и составительский оригинал
   FGMFINAL      = 10,    // ФГМ и издательский оригинал
   FGMCONSTANT   = 11,    // ФГМ и диапозитив постоянного хранения
   FGMSPECIAL    = 12,    // ФГМ и специальный оригинал
   SPACE         = 64,    // Космические
   AERO          = 65,    // Аэроснимки
   PHOTOGRAM     = 66     // Фототеодолитные снимки
  };


  // Типы масштабов для Равноугольной проекции Гаусса-Крюгера
  enum SCALEGAUSS
  {
   FGKSCALEMLN = 1,
   FGKSCALE500 = 2,
   FGKSCALE200 = 3,
   FGKSCALE100 = 4,
   FGKSCALE50  = 5,
   FGKSCALE25  = 6,
   FGKSCALE10  = 7,
   FGKSCALE5   = 8,
   FGKSCALE2   = 9
  };

  // Типы масштабов для обзорно-географических карт
  enum SCALEGEOG
  {
   FGEOSCALE10MLN = 1,
   FGEOSCALE5MLN  = 2,
   FGEOSCALE2MLN  = 3,
   FGEOSCALEMLN   = 4,
   FGEOSCALE500   = 5
  };

  // Типы масштабов аэронавигационных карт
  enum SCALEAERO
  {
   FARSCALE4MLN = 1,
   FARSCALE2MLN = 2
  };

  // Типы масштабов для карт топографический план города
  enum SCALECITYPLAN
  {
   FCPSCALE25 = 1,
   FCPSCALE10 = 2
  };

  // Количество типов для таблиц соответствий
  enum TABLEVALUETYPE
  {
   COUNTMAPTYPE = 15,             // тип карты   
   COUNTUNIT    = 12,             // единицы измерения
   COUNTUNITHEIGHT = 8,           // единицы измерения по высоте
   COUNTELL     = 10,             // вид эллипсоида
   COUNTHEIGHT  =  9,             // система высот
   COUNTCOORD   =  8,             // система координат
   COUNTPROJ    = 33,             // проекция    
   COUNTMAPINITKIND = 5,          // вид исходного материала
   COUNTMAPINITTYPE = 7,          // тип ИКМ
   COUNTPHOTO   = 10,             // тип снимков
   COUNTFRAME   = 5,              // вид рамки
   COUNTGEOGRAPHICCODE = 9        // коды для обзорно-географических карт
  };

}
  REGISTERTYPES;

// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// +++++  ПАРАМЕТРЫ ПРОЕКЦИИ ЭЛЕКТРОННОЙ КАРТЫ  ++++++++++++
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++

typedef struct CONSTPROJ
{
  double FirstMainParal    ; // Первая главная параллель
  double SecondMainParal   ; // Вторая главная параллель
  double AxisMeridian      ; // Осевой меридиан
  double MainPointParallel ; // Параллель главной точки
  double PoleLatitude      ; // Широта полюса проекции
  double PoleLongitude     ; // Долгота полюса проекции
}
  CONSTPROJ;

// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// +++++  ФОРМУЛЯР ЛИСТА ЭЛЕКТРОННОЙ КАРТЫ  ++++++++++++++++
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++

typedef struct LISTREGISTER
{
LONG        Length                 ;  // Размер данной структуры

char        Nomenclature[32]       ;  // Номенклатура листа
char        ListName[32]           ;  // Название листа

char        FileName[260]          ;  // Имя файла по которому в районе будет
                                      // создан лист с данным именем
                                      // и расширениями HDR, DAT, SEM, DRW

// Прямоугольные координаты листа в метрах
double      XSouthWest             ;  // X ю-з
double      YSouthWest             ;  // Y ю-з
double      XNorthWest             ;  // X с-з
double      YNorthWest             ;  // Y с-з
double      XNorthEast             ;  // X с-в
double      YNorthEast             ;  // Y с-в
double      XSouthEast             ;  // X ю-в
double      YSouthEast             ;  // Y ю-в

// Геодезические координаты листа в радианах
double      BSouthWestCoordinate   ;  // B ю-з
double      LSouthWestCoordinate   ;  // L ю-з
double      BNorthWestCoordinate   ;  // B с-з
double      LNorthWestCoordinate   ;  // L с-з
double      BNorthEastCoordinate   ;  // B с-в
double      LNorthEastCoordinate   ;  // L с-в
double      BSouthEastCoordinate   ;  // B ю-в
double      LSouthEastCoordinate   ;  // L ю-в

LONG        MaterialKind           ;  // Вид исходного материала
LONG        MaterialType           ;  // Тип ИКМ
LONG        ReliefHeight           ;  // Высота сечения рельефа в дециметрах
char        Date[12]               ;  // Дата съемки "ГГГГММДД"

double      MagneticAngle          ;  // Магнитное склонение
double      YearMagneticAngle      ;  // Годовое магнитное склонение
double      MeridianAngle          ;  // Среднее сближение меридианов
char        DateAngle[12]          ;  // Дата склонения "ГГГГММДД"

LONG        Reserv2[3]             ;  // = 0

DOUBLEPOINT BorderSW               ;  // Служебное поле (ВСЕГДА 0 !)
}
  LISTREGISTER;

// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ++++++++++++ "ФОРМУЛЯР РАЙОНА РАБОТ" ++++++++++++++++++++
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++

typedef struct MAPREGISTER
{
LONG        Length                 ; // Размер данной структуры

char        Name[32]               ; // Имя района
LONG        Scale                  ; // Знаменатель масштаба
LONG        ProjectionFlag         ; // Флаг соответствия проекции
LONG        EllipsoideKind         ; // Вид эллипсоида
LONG        HeightSystem           ; // Система высот
LONG        MaterialProjection     ; // Проекция исх. материала
LONG        CoordinateSystem       ; // Система координат
LONG        PlaneUnit              ; // Единица измерения в плане
LONG        HeightUnit             ; // Единица измерения по высоте
LONG        FrameKind              ; // Вид рамки
LONG        MapType                ; // Обобщенный тип карты
LONG        DeviceCapability       ; // Разрешающая способность прибора
LONG        DataProjection         ; // Наличие данных о проекции
LONG        OrderViewSheetFlag     ; // Порядок отображения листов
LONG        FlagRealPlace          ; // Признак реальных координат
LONG        ZoneNumber             ; // Заполняется системой при запросе
                                     // формуляра - номер зоны топокарты

                                     // В радианах
double      FirstMainParallel      ; // Первая главная параллель
double      SecondMainParallel     ; // Вторая главная параллель
double      AxisMeridian           ; // Осевой меридиан
double      MainPointParallel      ; // Параллель главной точки
}
  MAPREGISTER;


typedef struct MAPREGISTEREX
{
LONG        Length                 ; // Размер данной структуры

char        Name[32]               ; // Имя района
LONG        Scale                  ; // Знаменатель масштаба
LONG        ProjectionFlag         ; // Флаг соответствия проекции
LONG        EllipsoideKind         ; // Вид эллипсоида
LONG        HeightSystem           ; // Система высот
LONG        MaterialProjection     ; // Проекция исх. материала
LONG        CoordinateSystem       ; // Система координат
LONG        PlaneUnit              ; // Единица измерения в плане
LONG        HeightUnit             ; // Единица измерения по высоте
LONG        FrameKind              ; // Вид рамки
LONG        MapType                ; // Обобщенный тип карты
LONG        DeviceCapability       ; // Разрешающая способность прибора
                                     // Обычно равна 20 000
                                     // Для карт повышенной точности:  
                                     // -1 - максимальная точность
                                     // -2 - хранить координаты в сантиметрах
                                     // -3 - хранить координаты в миллиметрах
LONG        DataProjection         ; // Наличие данных о проекции
LONG        OrderViewSheetFlag     ; // Порядок отображения листов
LONG        FlagRealPlace          ; // Признак реальных координат
LONG        ZoneNumber             ; // Заполняется системой при запросе
                                     // формуляра - номер зоны топокарты

                                     // В радианах
double      FirstMainParallel      ; // Первая главная параллель
double      SecondMainParallel     ; // Вторая главная параллель
double      AxisMeridian           ; // Осевой меридиан
double      MainPointParallel      ; // Параллель главной точки
double      PoleLatitude           ; // Широта полюса проекции
double      PoleLongitude          ; // Долгота полюса проекции
double      Reserv2[8]             ; // Резерв = 0

}
  MAPREGISTEREX;

#endif

