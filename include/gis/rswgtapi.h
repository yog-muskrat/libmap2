
#ifndef RSWGTAPI_H
#define RSWGTAPI_H

#ifndef MAPTYPE_H
  #include "maptype.h"   // Описание структур интерфейса MAPAPI
#endif


// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// +++++ ОПИСАНИЕ ФУНКЦИЙ АКТИВИЗАЦИИ ДИАЛОГОВЫХ ОКОН ++++++
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++




extern "C"
{
 // --------------------------------------------------------------
 // Гистограмма полутонового растра
 // (Применимо для растров с палитрой - 256 градаций серого)
 // param      - указатель на структуру типа TASKPARM (см. maptype.h)
 // hwnd       - Идентификатор окна документа
 // hMap       - идентификатор открытой векторной(растровой) карты
 // rect1      - габариты изображения растра в пикселах района.
 //              Гистограмма строится по указанной области.
 // При ошибке возвращает ноль
 // --------------------------------------------------------------
 long int _export WINAPI RswHistogramDialog(TASKPARM* param,
                                            HWND hwnd,
                                            HMAP hmap,
                                            RECT* rect1,
                                            RECT* rect2,
                                            POINT* point,
                                            long int * flag1,
                                            long int * flag2);

 // --------------------------------------------------------------
 // Бинаризация растровой карты
 // (Применимо для растров с палитрой в 16 и 256 цветов)
 // hwnd       - Идентификатор окна документа
 // hMapDoc    - необязательный параметр(если не используется, д.б. равен нулю)
 // hMap       - идентификатор открытой векторной(растровой) карты
 // parm       - указатель на структуру типа TASKPARM (см. maptype.h)
 // rstNumber  - номер файла растровой карты в цепочке (растр д.б. добавлен\открыт в документ hMap)
 // При ошибке возвращает ноль
 // --------------------------------------------------------------
 long int _export WINAPI RswBinarizationDialog(HWND hwnd,
                                               HMAPDOC hMapDoc,
                                               HMAP hMap,
                                               TASKPARM * parm,
                                               int rstNumber);

 // --------------------------------------------------------------
 // Загрузка растровых данных потоком по файлу *.PLN
 // hMap       - идентификатор открытой векторной(растровой) карты
 // lpszsource - имя файла PLN
 // lpsztarget - имя создаваемого документа (длина строки д.б. MAX_PATH)
 // parm       - указатель на структуру типа TASKPARM (см. maptype.h)
 // При ошибке возвращает ноль
 // --------------------------------------------------------------
 long int _export WINAPI PlnToRswDialog(HMAP hMap,
                                        const char* lpszsource,
                                        char* lpsztarget,
                                        TASKPARM* parm);

 // --------------------------------------------------------------
 // Фильтрация 1-битного растра
 // hmap       -  идентификатор открытой векторной карты
 // rswName    - имя файла растровой карты
 // parm       - указатель на структуру типа TASKPARM (см. maptype.h)
 // При ошибке возвращает ноль
 // --------------------------------------------------------------
 long int _export WINAPI RswFilterDialog(HMAP hmap, char* rswName, TASKPARM* parm);

 // --------------------------------------------------------------
 // Установка параметров проекции
 // title      -  заголовок диалога (например, "Установка параметров проекции растровой карты")
 // map        -  идентификатор открытой векторной карты
 // mapregisterex - указатель на структуру типа MAPREGISTEREX (см. mapcreate.h)
 // parm       - указатель на структуру типа TASKPARM (см. maptype.h)
 // При ошибке возвращает ноль
 // --------------------------------------------------------------
 long int _export WINAPI SettingProjectionParameters(const char* title,
                                                     HMAP map,
                                                     MAPREGISTEREX* mapregisterex,
                                                     TASKPARM* parm);
}
#endif


