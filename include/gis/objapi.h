
#ifndef OBJAPI_H
#define OBJAPI_H

#ifndef MAPTYPE_H
  #include "maptype.h"   // Описание структур интерфейса MAPAPI
#endif

typedef struct OBJECTFORM      // ПАРАМЕТРЫ ОТОБРАЖЕНИЯ ИНФОРМАЦИИ ОБ ОБ'ЕКТЕ
{
  HWND        Window;          // Идентификатор окна документа
  POINT       Position;        // Положение курсора в точке выбора в координатах экрана        
  POINT       LeftTopPosition; // Координаты левого верхнего угла карты в пикселах в районе    
  long int    PlaceSystem;     // Текущая система отображения координат метрики объекта:
                               // 1 - в метрах на местности
                               // 2 - в условных единицах карты (дискретах)
                               // 3 - в пикселах текущего полного изображения
                               //     эллипсоид Красовского 1942г.
                               // 4 - в радианах в соответствии с проекцией
                               // 5 - в градусах ...
                               // 6 - в градусах, минутах, секундах ...
                               // 7 - в радианах (общеземной эллипсоид WGS84)                    
                               // 8 - в градусах (общеземной эллипсоид WGS84)
                               // 9 - в градусах, минутах, секундах (общеземной эллипсоид WGS84)
  short int   FormMode;        // Вид окна отображения объекта
                               // 0 - только общие сведения об объекта
                               // 1 - общие сведения и семантика объекта
                               // 2 - общие сведения и метрика объекта
                               // 3 - общие сведения и масштаб отображения объекта
                               // 4 - общие сведения и внешний вид объекта
                               // 5 - общие сведения и принтерный вид объекта
                               // 6 - общие сведения и графический вид объекта
                               // -1 - -6 соответствующая информация в полноэкранном варианте
  short int   MarkPointMode;   // Вид окна отображения карты
                               // Информация устанавливается побитно
                               // Перечисление выполнено начиная с младших разрядов
                               // Состояние мониторинга положения текущей точки метрики
                               // 0 - не отслеживать положение текущей точки метрики
                               // 1 - отслеживать положение текущей точки метрики
                               // Состав отображаемых карт
                               // 0 - отображается только карта, содержащая объект
                               // 1 - отображаются все карты
  HMAP        Map;             // Идентификатор открытой векторной карты
                               // (УКАЗАТЕЛЬ НА TMapAccess)
}
  OBJECTFORM;

// Структура TASKPARM описана в maptype.h
// Если в TASKPARM установлено полное имя файла ".hlp",
// то этот файл должен содержать топик с номером 6700,
// который будет вызываться при нажатии клавиши "Помощь"

typedef long int  HCHOICEOBJECT; // ИДЕНТИФИКАТОР ОТКРЫТОГО СЕАНСА ВЫБОРА ОБЪЕКТА
                                 // (УКАЗАТЕЛЬ НА TChoiceObject)

// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ОПИСАНИЕ ФУНКЦИЙ ВЫБОРА/ПОИСКА ОБЪЕКТА ЭЛЕКТРОННОЙ КАРТЫ
// +++++++++++++++++++++++++++++++++++++++++++++++++++++++++

extern "C"
{

 // Выполнить поиск и обработку объекта карты в точке Position
 // Выбранный объект доступен через переменную object
 // object - адрес для размещения описания объекта
 // place - применяемая система координат (геодезические
 // координаты не обрабатываются)
 // (для LINUXAPI система координат только в дискретах)      
 // frame - прямоугольник поиска в соответствии с place,
 // причем центр прямоугольника обязан совпадать с точкой,
 // указанной в Position структуры OBJECTFORM
 // Структура TASKPARM описана в maptype.h
 // Если объект выбран - возвращается ненулевое значение
 // Если объект не выбран (нет в данной точке или пользователь
 // нажал "Cancel") - возвращается ноль

 long int _export WINAPI  formSelectObject(HOBJ object, MAPDFRAME* frame,
                              long int place, OBJECTFORM* objform,
                              TASKPARM* taskparm);

 //================================================================
 // Выполнение диалога выбора объекта в режиме "Create"
 // Обработка в этом режиме требует последовательного вызова
 // трех функций: 1.formProcessSelectObject
 //               2.formContinueSelectObject
 //               3.formDestroySelectObject
 //================================================================
 // Выполнить поиск и обработку объекта карты в точке Position
 // Выбранный объект доступен через переменную object
 // object - адрес для размещения описания объекта
 // place - применяемая система координат (геодезические
 // координаты не обрабатываются)
 // (для LINUXAPI система координат только в дискретах)      
 // frame - прямоугольник поиска в соответствии с place,
 // причем центр прямоугольника обязан совпадать с точкой,
 // указанной в Position структуры OBJECTFORM
 // Структура TASKPARM описана в maptype.h
 // Возвращает:
 // 0 - если процесс выбора объекта не запущен
 // 1 - если процесс выбора объекта успешно создан

 long int _export WINAPI  formProcessSelectObject(HOBJ object, MAPDFRAME* frame,
                              long int place, OBJECTFORM* objform,
                              TASKPARM* taskparm,
                              HCHOICEOBJECT &choiceobject);

 // Продолжение процесса выбора объекта в новой исходной точке
 // Выполнить поиск и обработку объекта карты в точке Position
 // Выбранный объект доступен через переменную object
 // object - адрес для размещения описания объекта
 // place - применяемая система координат (геодезические
 // координаты не обрабатываются)
 // (для LINUXAPI система координат только в дискретах)      
 // frame - прямоугольник поиска в соответствии с place,
 // причем центр прямоугольника обязан совпадать с точкой,
 // указанной в Position структуры OBJECTFORM
 // Всегда возвращается ноль

 long int _export WINAPI  formContinueSelectObject(HOBJ object, MAPDFRAME* frame,
                              long int place, OBJECTFORM* objform,
                              HCHOICEOBJECT choiceobject);

 // Завершение диалога выбора объекта

 long int _export WINAPI
      formDestroySelectObject(HCHOICEOBJECT choiceobject);

 //================================================================

 // Выполнить поиск и обработку объекта карты в точке Position
 // с предварительной проверкой наличия объекта в точке Position

 long int _export WINAPI  formCheckAndSelectObject(HOBJ object,
                              MAPDFRAME* frame, long int place,
                              OBJECTFORM* objform, TASKPARM* taskparm);

 // Поиск объекта по заданным условиям
 // select - условия отбора объектов
 // flag   - порядок поиска объектов
 // Для выделения на карте найденного объекта вызывающая программа
 // должна обрабатывать сообщение WM_LEFTTOPPOINT :
 //  - параметр wparаm содержит указатель типа (POINT*)
 //    для записи текущих координат верхнего левого угла окна
 //    карты в пикселах общего изображения (PP_PICTURE);
 //  - вернуть значение идентификатора сообщения при успешном
 //    выполнении (WM_LEFTTOPPOINT).
 // Идентификатор WM_LEFTTOPPOINT определен в maptype.h
 // Для перемещения изображения карты с целью отображения
 // найденного объекта вызывающая программа должна обрабатывать
 // сообщение WM_MOVEDOC :
 //  - параметр wparаm содержит указатель типа (POINT*)
 //    координат верхнего левого угла окна карты в пикселах
 //    общего изображения (PP_PICTURE), куда нужно переместить
 //    изображение;
 //  - параметр lparаm содержит 0 или указатель типа (POINT*)
 //    координаты маркера в пикселах общего изображения (PP_PICTURE);
 //  - вернуть значение идентификатора сообщения при успешном
 //    выполнении (WM_MOVEDOC).
 // Идентификатор WM_MOVEDOC определен в maptype.h
 // Если объект выбран - возвращается ненулевое значение.
 // Если объект не выбран - возвращается ноль.

 long int _export WINAPI  formSeekObject(HOBJ object,
                              long int flag, HSELECT select,
                              OBJECTFORM* objform, TASKPARM* taskparm);

 // Поиск объекта по заданным условиям
 // с предварительной проверкой наличия объекта

 long int _export WINAPI  formCheckAndSeekObject(HOBJ object,
                              long int flag, HSELECT mapselect,
                              OBJECTFORM* objform, TASKPARM* taskparm);

 // Вызов диалога выбора только для заданного через переменную
 // object объекта
 // Окно отображения объекта не может при входе содержать общие
 // сведения и семантику объекта
 // Если объект выбран - возвращается ненулевое значение
 // Если объект не выбран (нет в данной точке или пользователь
 // нажал "Cancel") - возвращается ноль

 long int _export WINAPI  formSelectAssignObject(HOBJ object,
                              OBJECTFORM* objform, TASKPARM* taskparm);

 // Вызов диалога выбора для создания семантики нового объекта
 // Объект задан через переменную object
 // Окно отображения объекта содержит общие сведения и семантику объекта
 // Сохранение информации по объекту не выполняется
 // Сохранять изменения нужно после закрытия диалога по "IDOK"
 // Если диалог закрыт по "IDOK"  - возвращается ненулевое значение
 // Если не по "IDOK" - возвращается ноль

 long int _export WINAPI formCreateObject(HOBJ        object,
                                          OBJECTFORM* objform,
                                          TASKPARM*   taskparm);

 // Вызов диалога выбора для создания метрики нового объекта
 // Объект задан через переменную object
 // Окно отображения объекта содержит общие сведения и метрику объекта
 // Если диалог закрыт по "IDOK"  - возвращается ненулевое значение
 // Если не по "IDOK" - возвращается ноль

 long int _export WINAPI formInputObject(HOBJ        object,
                                         OBJECTFORM* objform,
                                         TASKPARM*   taskparm);

 #ifdef LINUXAPI                          
 // Вызов диалога выбора (поиска)только для заданного через переменную
 // info объекта
 // Если объект выбран - возвращается ненулевое значение
 // Если объект не выбран (пользователь нажал "Cancel") - возвращается ноль
 long int formViewAssignObject(HOBJ object,
                               OBJECTFORM* objform, TASKPARM* taskparm);
 #endif

}       // extern "C"

#endif  // OBJAPI_H
