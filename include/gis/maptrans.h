
#if !defined(MAPTRANS_H)
#define MAPTRANS_H

#ifndef MAPMACRO_H
  #include "mapmacro.h"
#endif

#ifndef MAPREGIS_H
  #include "mapregis.h"
#endif


#define RADSEC  206264.806247096l   // Количество секунд в одном радиане

//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
//+  БАЗОВЫЙ КЛАСС ПЕРЕВОДА КООРДИНАТ ДЛЯ РАЗЛИЧНЫХ ПРОЕКЦИЙ  ++++
//++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
typedef class _DLLCLASS TTranslate
{
 public:

 // Конструктор и деструктор класса TTranslate
 // Входные данные:
 //       projection - проекция исходного материала
 //       describe   - справочные данные по проекции исходного материала
 //       Для проекции Гаусса-Крюгера обязательно заполнение только
 //       осевого меридиан(AxisMeridian).
 //       Для равноугольной конической проекции обязательно заполнение
 //       всех полей CONSTPROJ.
 //       Для цилиндрической проекции обязательно заполнение всех полей
 //       CONSTPROJ, кроме второй главной параллели(SecondMainParal).
 //       ellipsoid - вид эллипсоида(по умолчанию - эллипсоид Красовского 1942 г.)
 TTranslate(int projection, CONSTPROJ * describe,
            int ellipsoid = KRASOVSKY42,
            int coordinatesystem = 0);

 TTranslate();

 ~TTranslate();

 // Определение кода ошибки последней функции
 long Error() { return IsError;}

 // Установка проекции исходного материала и справочных данных по
 // проекции исходного материала
 // Входные данные:
 // projection - проекция исходного материала
 // describe   - справочные данные по проекции исходного материала
 // ellipsoid  - вид эллипсоида(по умолчанию - эллипсоид Красовского 1942 г.)
 // Выходные данные:    код ошибки по результатам  TestConstproj
 int _fastcall SetProjection(int projection, CONSTPROJ * describe,
                             int ellipsoid = KRASOVSKY42,
                             int coordinatesystem = 0);

#ifdef BUILD_DLL   
 // Заполнить TTranslate по паспорту карты и осевому меридиану
 int _fastcall SetTranslateByMap(TMap * map, double * l);
#endif

 // Возврат вида эллипсоида
 int GetEllipsoid()  {  return Ellipsoid;  }

 // Возврат вида эллипсоида
 int GetProjection()  {  return TypeProjection;  }

 // Система координат
 int GetCoordinateSystem()  {  return CoordinateSystem; }

 // Запросить номер зоны для топографических карт
 int GetNumberZone();
 int ZoneNumber() { return NumberZone; }

 // Установка номера зоны и осевого меридиана по номеру зоны
 int SetNumberZone(int numberzone);

 // Установка номера зоны и осевого меридиана по долготе
 int SetNumberZone(double l);

 // Определение геодезических координат B и L по прямоугольным X и Y
 // Входные данные:
 // x,y - прямоугольные координаты точки в метрах
 // Выходные данные:
 // B,L - широта и долгота точки в радианах
 void _fastcall XY2BL(double x, double y, double * B, double * L);

 // Определение прямоугольных координат X и Y по геодезическим B и L
 // Входные данные:
 // B,L - геодезические координаты точки в радианах
 // Выходные данные:
 // x,y - прямоугольные координаты точки в метрах
 void _fastcall BL2XY(double B, double L, double *x, double *y);

 // Контроль корректности справочных данных в соответствии
 // с проекцией исходного материала
 // Входные данные:
 // projection - проекция исходного материала
 // describe - справочные данные по проекции исходного материала
 // Выходные данные:
 //                  код ошибки (см. MAPERR.RH)
 int _fastcall TestConstproj(int projection, CONSTPROJ * describe);

 protected :

 // Определение номера зоны по долготе осевого меридиана в системе
 // Гаусса-Крюгера
 // Входные данные:
 // meridian - долгота осевого меридиана в радианах
 // Выходные данные:
 // LAxisMeridianZone  долгота осевого меридиана зоны в радианах
 // NumberZone         номер зоны
 void IdentifyZone(double meridian);

 // Установка кода ошибки
 long Error(long error) { return (IsError = error);}


 //*********************************************************************
 // Программы перевода координат X,Y точки в системе Гаусса-Крюгера
 // (цилиндрической проекции) и геодезических координат точки B,L
 //*********************************************************************

 // Вычисление геодезических координат точки B,L(цилиндрической проекции)
 // по прямоугольным координатам точки X,Y в системе Гаусса-Крюгера
 // Входные данные:
 // x,y - координаты точки в системе Гаусса-Крюгера в метрах
 // Выходные данные:
 // B,L - широта и долгота точки в радианах
 void XY2BL_CYL(double x, double y, double * B, double * L);

 // Вычисление прямоугольных координат X,Y точки в системе Гаусса-Крюгера
 // (цилиндрической проекции) по геодезическим координатам точки B,L
 // Входные данные:
 // B,L - геодезические координаты точки в радианах
 // Выходные данные:
 // x,y - координаты точки в системе Гаусса-Крюгера в метрах
 void BL2XY_CYL(double B, double L, double *x, double *y);
//*********************************************************************

 //********************************************************************
 // Программы перевода прямоугольных координат точки X,Y и
 // геодезических координат точки B,L в системе Гаусса-Крюгера
 //********************************************************************

 // Определение геодезических координат B и L по прямоугольным X и Y
 // Входные данные:
 // x,y - координаты точки в системе Гаусса-Крюгера в метрах
 // Выходные данные:
 // B,L - широта и долгота точки в радианах
 void XY2BL_GK(double x, double y, double * B, double * L);

 // Определение прямоугольных координат X и Y по геодезическим B и L
 // Входные данные:
 // B,L - геодезические координаты точки в радианах
 // Выходные данные:
 // x,y - координаты точки в системе Гаусса-Крюгера в метрах
 // Зона может не вычисляться, но в первый раз функция вызывается с PR=0.
 void BL2XY_GK(double B, double L, double *x, double *y);

 //********************************************************************

 //*********************************************************************
 // Программы перевода координат X,Y точки в системе Гаусса-Крюгера и
 // геодезических координат точки B,L(равноугольная коническая проекция)
 //*********************************************************************

 // Вычисление геодезических координат точки B,L
 // (равноугольной конической проекции) по координатам
 // точки X,Y в системе Гаусса-Крюгера
 // Входные данные:
 // x,y - координаты точки в системе Гаусса-Крюгера в метрах
 // Выходные данные:
 // B,L - широта и долгота точки в радианах
 void XY2BL_CON(double x, double y, double * B, double * L);

 // Вычисление координат X,Y точки в системе Гаусса-Крюгера
 // (равноугольной конической проекции) по геодезическим
 // координатам точки B,L
 // Входные данные:
 // B,L - геодезические координаты точки в радианах
 // Выходные данные:
 // x,y - координаты точки в системе Гаусса-Крюгера в метрах
 void BL2XY_CON(double B, double L, double *x, double *y);
 //*********************************************************************

 //********************************************************************
 // Программы перевода координат X,Y точки  и геодезических координат
 // точки B,L(цилиндрическая специальная проекция - "бланковка")
 //********************************************************************

 // Вычисление геодезических координат точки B,L по координатам
 // точки X,Y в цилиндрической специальной проекции ("бланковка")
 // Входные данные:
 // x,y - координаты точки в метрах
 // Выходные данные:
 // b,l - широта и долгота точки в радианах
 void XY2BL_BLANK(double x, double y, double *b, double *l);

 // Вычисление координат X,Y точки по геодезическим координатам
 // точки B,L в цилиндрической специальной проекции ("бланковка")
 // Входные данные:
 // b,l - геодезические координаты точки в радианах
 // Выходные данные:
 // x,y - координаты точки в метрах
 void BL2XY_BLANK(double b, double l, double *x, double *y);

 //*********************************************************************
 // Программы перевода координат X,Y точки  и геодезических координат
 // точки B,L(специальная проекция - "Глобус")
 //*********************************************************************

 // Вычисление геодезических координат точки B,L по координатам
 // точки X,Y в специальной проекции ("Глобус")
 // Входные данные:
 // x,y - координаты точки в метрах
 // Выходные данные:
 // b,l - широта и долгота точки в радианах
 void XY2BL_GLOBE(double x, double y, double *b, double *l);  

 // Вычисление координат X,Y точки по геодезическим координатам
 // точки B,L в специальной проекции ("Глобус")
 // Входные данные:
 // b,l - геодезические координаты точки в радианах
 // Выходные данные:
 // x,y - координаты точки в метрах
 void BL2XY_GLOBE(double b, double l, double *x, double *y);  
 //********************************************************************

 //********************************************************************
 // Перевод геодезических координат из одной системы в другую
 // и в прямоугольные в системе NAHRWAN (эллипсоид Кларка 1880г.)
 //********************************************************************

 public:

 // Перевод геодезических координат из системы 1942г.
 //(эллипсоид Красовского) в систему ГСК-2011(эллипсоид ГСК-2011)
 // Входные данные:
 // double b - широта точки в радианах
 // double l - долгота точки в радианах
 // double h - высота в метрах
 // Выходные данные:
 // double br - широта точки в радианах
 // double lr - долгота точки в радианах
 // double hr - высота в метрах
 void BL422BLGSK2011(double  b,  double  l,  double  h,
                     double *br, double *lr, double *hr);

 // Перевод геодезических координат из ГСК-2011 (эллипсоид ГСК-2011)
 // в систему 1942 г(эллипсоид Красовского)
 // Входные данные:
 // double b - широта точки в радианах
 // double l - долгота точки в радианах
 // double h - высота в метрах
 // Выходные данные:
 // double br - широта точки в радианах
 // double lr - долгота точки в радианах
 // double hr - высота в метрах
 void BLGSK20112BL42(double  b,  double  l,  double  h,
                     double *br, double *lr, double *hr); 

 // Перевод геодезических координат из системы 1942г.
 // (эллипсоид Красовского) в систему ПЗ-90(общеземной эллипсоид ПЗ-90)
 // Входные данные:
 // double b - широта точки в радианах
 // double l - долгота точки в радианах
 // double h - высота в метрах
 // Выходные данные:
 // double br - широта точки в радианах
 // double lr - долгота точки в радианах
 // double hr - высота в метрах
 void BL422BLEC90(double  b,  double  l,  double  h,
                  double *br, double *lr, double *hr);

 // Перевод геодезических координат из системы 1995г.
 // (эллипсоид Красовского) в систему ПЗ-90(общеземной эллипсоид ПЗ-90)
 // Входные данные:
 // double b - широта точки в радианах
 // double l - долгота точки в радианах
 // double h - высота в метрах
 // Выходные данные:
 // double br - широта точки в радианах
 // double lr - долгота точки в радианах
 // double hr - высота в метрах
 void BL952BLEC90(double  b,  double  l,  double  h,
                  double *br, double *lr, double *hr);

 // Перевод геодезических координат из системы 1942г.(эллипсоид
 // Красовского) в систему WGS-84(общеземной эллипсоид WGS-84)
 // Входные данные:
 // double b - широта точки в радианах
 // double l - долгота точки в радианах
 // double h - высота в метрах
 // Выходные данные:
 // double br - широта точки в радианах
 // double lr - долгота точки в радианах
 // double hr - высота в метрах
 void BL422BLWGS84(double b,   double l,   double h,
                   double *br, double *lr, double *hr);

 // Перевод геодезических координат из системы 1942г.
 // (эллипсоид Красовского) в систему NAHRWAN(эллипсоид Кларка 1880г.)
 // Входные данные:
 // double b - широта точки в радианах
 // double l - долгота точки в радианах
 // double h - высота в метрах
 // Выходные данные:
 // double br - широта точки в радианах
 // double lr - долгота точки в радианах
 // double hr - высота в метрах
 void BL422BLNAHRWAN(double b,   double l,   double h,
                     double *br, double *lr, double *hr);

 // Перевод геодезических координат из системы 1942г.
 // (эллипсоид Красовского) в прямоугольные в системе NAHRWAN
 // (эллипсоид Кларка 1880г.)
 // Входные данные:
 // double b - широта точки в радианах
 // double l - долгота точки в радианах
 // double h - высота в метрах
 // Выходные данные:
 // double x,y - прямоугольные координаты точки в метрах
 void BL422XYNAHRWAN(double  b,   double  l,   double h,
                     double *x,   double *y);

 // Перевод геодезических координат из ПЗ-90 (общеземной эллипсоид ПЗ-90)
 // в систему 1942 г(эллипсоид Красовского)
 // Входные данные:
 // double b - широта точки в радианах
 // double l - долгота точки в радианах
 // double h - высота в метрах
 // Выходные данные:
 // double br - широта точки в радианах
 // double lr - долгота точки в радианах
 // double hr - высота в метрах
 void BLEC902BL42(double  b,  double  l,  double  h,
                  double *br, double *lr, double *hr);

 // Перевод геодезических координат из ПЗ-90 (общеземной эллипсоид ПЗ-90)
 // в систему 1995 г(эллипсоид Красовского)
 // Входные данные:
 // double b - широта точки в радианах
 // double l - долгота точки в радианах
 // double h - высота в метрах
 // Выходные данные:
 // double br - широта точки в радианах
 // double lr - долгота точки в радианах
 // double hr - высота в метрах
 void BLEC902BL95(double  b,  double  l,  double  h,
                  double *br, double *lr, double *hr);

 // Перевод геодезических координат из системы WGS-84 (общеземной эллипсоид WGS-84)
 // в систему 1942 г(эллипсоид Красовского)
 // Входные данные:
 // double b - широта точки в радианах
 // double l - долгота точки в радианах
 // double h - высота в метрах
 // Выходные данные:
 // double br - широта точки в радианах
 // double lr - долгота точки в радианах
 // double hr - высота в метрах
 void BLWGS842BL42(double b,   double l,   double h,
                   double *br, double *lr, double *hr);

 // Перевод геодезических координат из системы NAHRWAN(эллипсоид Кларка 1880г.)
 // в систему 1942 г(эллипсоид Красовского)
 // Входные данные:
 // double b - широта точки в радианах
 // double l - долгота точки в радианах
 // double h - высота в метрах
 // Выходные данные:
 // double br - широта точки в радианах
 // double lr - долгота точки в радианах
 // double hr - высота в метрах
 void BLNAHRWAN2BL42(double b,   double l,   double h,
                     double *br, double *lr, double *hr);

 // Перевод геодезических координат из системы UTMNAD27 (эллипсоид Кларка 1866г.)
 // в систему 1942 г (эллипсоид Красовского)
 // Входные данные:
 // double b - широта точки в радианах
 // double l - долгота точки в радианах
 // Выходные данные:
 // double br - широта точки в радианах
 // double lr - долгота точки в радианах
 void BLUTMNAD27CLARKE662BL42(double b,   double l,            
                              double *br, double *lr);

 // Перевод геодезических координат из системы 1942 г (эллипсоид Красовского)
 // в систему UTMNAD27 (эллипсоид Кларка 1866г.)
 // Входные данные:
 // double b - широта точки в радианах
 // double l - долгота точки в радианах
 // Выходные данные:
 // double br - широта точки в радианах
 // double lr - долгота точки в радианах
 void BL422BLUTMNAD27CLARKE66(double b,   double l,            
                              double *br, double *lr);

 // Пересчет координат B, L из одной системы координат в другую
 //1. Перевод геодезических координат из системы UTMNAD27 (эллипсоид Кларка 1866г.)
 //   в систему 1942 г (эллипсоид Красовского)
 //2. Перевод геодезических координат из системы 1942 г (эллипсоид Красовского)
 //   в систему UTMNAD27 (эллипсоид Кларка 1866г.)
 //3. Перевод геодезических координат из системы 1942г. (эллипсоид Красовского)
 //   в систему WGS-84(общеземной эллипсоид WGS-84)
 //4. Перевод геодезических координат из системы WGS-84 (общеземной эллипсоид WGS-84)
 //   в систему 1942 г(эллипсоид Красовского)
 // Входные данные:
 // double b - широта точки в радианах
 // double l - долгота точки в радианах
 // double h - высота в метрах
 // int inellipsoide  - вид эллипсоида (исходного)
 // int outellipsoide  - вид эллипсоида (выходного)
 // Выходные данные:
 // double b - широта точки в радианах
 // double l - долгота точки в радианах
 // double h - высота в метрах
 // Код возврата равен 0 - если пересчета не было
 // Код возврата равен 1 - если пересчет был
 int BLTransform(int inellipsoide,         // Вид эллипсоида
                 int outellipsoide,        // Вид эллипсоида
                 double* b, double* l, double* h);      

 // Инициализация системы WGS84 и проекции UTM
 void InitUTMforWGS84();

 // Инициализация системы NAD27 и проекции UTM на эллипсоиде Кларка
 void InitUTMforNAD27();     

 // Инициализация системы XXX и проекции UTM на эллипсоиде XXX
 void InitUTM();     

 // Инициализация системы 42 года в проекции ГК
 void InitGKfor42();

 void InitCK63();  

 // Вычисление номера зоны
 void InitNumberZone_in_Ill(double y);
 void InitNumberZone_in_Ill_l(double l);

 // Запросить номер зоны для топографических карт
 long GetNumberZone_in_Ill();

 // Установка номера зоны и осевого меридиана по номеру зоны
 long SetNumberZone_in_Ill(long numberzone);

 // Вычисление осевого меридиана по номеру зоны                  
 double CalcAxisMeridianByNumberZone_in_Ill(long numberzone);

 // Вычисление геодезических координат на текущем эллипсоиде точность 0.00003"
 void XY2BL_in_Ill(double x,double y,double *B,double *L);

 // Вычисление прямоугольных координат на текущем эллипсоиде точность 1 мм
 void BL2XY_in_Ill(double b,double l,double *x,double *y);

 // Вычисление геодезических координат на текущем эллипсоиде точность 0.03"
 void XY2BL_in_Ill_1(double x,double y,double *B,double *L);

 // Вычисление прямоугольных координат на текущем эллипсоиде точность 1 м
 void BL2XY_in_Ill_1(double b,double l,double *x,double *y);


 // Перевод геодезических координат из одной системы в другую
 // Входные данные:
 // double b       широта точки в радианах
 // double l       долгота точки в радианах
 // double h       высота в метрах
 // int i          флаг, указывающий в какую систему переводить
 //                 1- геодезические координаты в системе 1942г.
 //                    (эллипсоид Красовского) в систему ПЗ-90
 //                    (общеземной эллипсоид ПЗ-90)
 //                 2- геодезические координаты в системе ПЗ-90
 //                    (общеземной эллипсоид ПЗ-90) в систему WGS-84
 //                    (общеземной эллипсоид WGS-84)
 //                 3- геодезические координаты в системе WGS-84
 //                    (общеземной эллипсоид WGS-84) в систему NAHRWAN
 //                    (эллипсоид Кларка 1880г.)
 //                 4- геодезические координаты в системе ПЗ-90
 //                    (общеземной эллипсоид ПЗ-90) в систему 1942г.
 //                    (эллипсоид Красовского)
 //                 5- геодезические координаты в системе WGS-84
 //                    (общеземной эллипсоид WGS-84) в систему ПЗ-90
 //                    (общеземной эллипсоид ПЗ-90)
 //                 6- геодезические координаты в системе NAHRWAN
 //                    (эллипсоид Кларка 1880г.) в систему WGS-84
 //                    (общеземной эллипсоид WGS-84)
 //                 7- геодезические координаты в системе 1995г.
 //                    (эллипсоид Красовского) в систему ПЗ-90
 //                    (общеземной эллипсоид ПЗ-90)
 //                 8- геодезические координаты в системе ПЗ-90
 //                    (общеземной эллипсоид ПЗ-90) в систему 1995г.
 //                    (эллипсоид Красовского)

 // Выходные данные:
 // double br - широта точки в радианах
 // double lr - долгота точки в радианах
 // double hr - высота в метрах
 void BL2BL(double b,   double l,   double h,
            double *br, double *lr, double *hr,  int flag)
 {
   BL2BL_03(b, l, h, br, lr, hr, flag);     
 }

 // Точность 0.3
 void BL2BL_03(double b,   double l,   double h,
            double *br, double *lr, double *hr,  int flag);
 protected :

 // Точность 0.001
 void BL2BL_001(double b,   double l,   double h,
            double *br, double *lr, double *hr,  int flag);

 // Перевод геодезических координат в системе NAHRWAN
 // (эллипсоид Кларка 1880г.) в прямоугольные
 // Входные данные:
 // double b - широта точки в радианах
 // double l - долгота точки в радианах
 // Выходные данные:
 // double x,y - прямоугольные координаты точки в метрах
 void BL2XYNAHRWAN(double b,   double l,  double *x,  double *y);

 public:

 CONSTPROJ  ConstProjection;

 double   BigAxis;           // (м) большая полуось текущего эллипсоида
 double   ExscMerid;         // Эксцентриситет меридианного эллипса
 double   LAxisMeridianZone; // Долгота осевого меридиана зоны

 int      TypeProjection;    // Тип проекции
 int      Ellipsoid;         // Вид эллипсоида
 int      CoordinateSystem;  // Система координат

 long     NumberZone;        // Номер зоны
 long     IsError;           // Флаг состояния ошибки

 //---------------------------------------------------------------------
 // Постоянные прекций                              
 // Псевдоцилиндрическая равновеликая синусоидальная проекция Каврайского
 double   aa;   // aa=pow(3,0.25)*K_R;
 double   bb;   // bb=K_R*2.0/3.0*pow(3,0.25);
 double   cc;   // cc=sqrt(3)/2;

 // Псевдоцилиндрическая равновеликая эллиптическая проекция Мольвейде
 // double   aa;   // aa=sqrt(2)*K_R;
 // double   bb;   // bb=K_R*sqrt(8)/M_PI;

 // (Прямая) Равнопромежуточная коническая проекция секущий и касательный конус
 // (Прямая) Равновеликая коническая проекция секущий конус
 double   alva;
 double   cccc;
 double   qqqq;

 // (Прямая) Равноугольная коническая проекция секущий конус
 // double   alva;
 double   kkkk;
 // double   qqqq;

 // Полярная равноугольная азимутальная(стереографическая)проекция
 double   c1;

 // (Нормальная) Равновеликая азимутальная проекция Ламберта
 // double   kkkk;
 double   ppi2;

 // (Нормальная) Равнопромежуточная азимутальная проекция Постеля
 //double   kkkk;
 double   spi2;

 // Псевдоцилиндрическая синусоидальная проекция Урмаева для карт океанов
 double   a1;  // a1=1.42469*K_R;
 double   a2;  // a2=0.138175;
 double   a3;  // a3=0.877383*K_R;

 // Равнопромежуточная цилиндрическая проекция
 // double   kkkk;

 // Видоизмененная простая поликоническая проекция (международная)
 double   h;       //постоянные для трапеции: высота листа и sinусы
 double   sinfi1;
 double   sinfi2;
 double   r1;
 double   r2;
 double   ll;

 // Косая Равновеликая азимутальная проекция      Л А М Б Е Р Т А
 //double kkkk;
 //double ppi2;

 // Spherical Mercator 
 double FE;  // false easting
 double FN;  // false nothing
 double L0;  // latitude of natural origin
 double RR;  // radius of the sphere


 //---------------------------------------------------------------------
                             // Описание данных для разных систем и проекций
 double   X0;                // Условное начало прямоугольных координат
 double   Y0;
 double   M;                 // Масштаб изображения на осевом меридиане
 double   L1;                // Долгота осевого меридиана первой зоны
 double   L1radian;
 double   DL;                // Ширина координатной зоне
 double   DLradian;
 double   AIl;               // Большая полуось эллипсоида
 double   Alfa;              // Сжатие эллипсоида
 double   E2;                // Квадрат первого эксцентриситета
 long     N;                 // Номер зоны
}
 TTranslate;

typedef TTranslate TRANSLATE;

//=====================================================================
//        Класс преобразование радиан в градусы и обратно
//=====================================================================
class _DLLCLASS TRadianGrad
{
 public:

 //--------------------------------------------------
 // Перевод радиан в градусы, минуты, секунды
 // возвращает знак 0: число >= 0,
 //                 1: число < 0
 //--------------------------------------------------
 int RadianToGrad(double radian, int *grad, int *minute, double *second);

 //--------------------------------------------------
 // Перевод градусов, минут, секунд в радианы
 // sign - знак     0: число >= 0,
 //                 1: число < 0
 //--------------------------------------------------
 double GradToRadian(int grad, int minute, double second, int sign);

 //--------------------------------------------------
 // Перевод радиан в градусы
 // возвращает градусы
 //--------------------------------------------------
 double RadianToGrad(double radian);

 //--------------------------------------------------
 // Перевод градусов в радианы
 // возвращает радианы
 //--------------------------------------------------
 double GradToRadian(double grad);

 //-----------------------------------------------------
 // Приведение градусов, минут, секунд к нормальному виду
 // градусы < 360, минуты < 60, секунды < 60
 //-----------------------------------------------------
 int GradNormalize(int *grad, int *minute, double *second);
};

#ifdef BUILD_DLL

// Определение геодезических координат B и L по прямоугольным X и Y
// Входные данные:
// x,y - прямоугольные координаты точки в метрах
// Выходные данные:
// b,l - широта и долгота точки в радианах
void _fastcall ttrXY2BL(TRANSLATE * data, double x, double y,
                                          double *b, double *l);

// Определение прямоугольных координат X и Y по геодезическим B и L
// Входные данные:
// b,l - геодезические координаты точки в радианах
// Выходные данные:
// x,y - прямоугольные координаты точки в метрах
void _fastcall ttrBL2XY(TRANSLATE * data, double b, double l,
                                          double *x, double *y);


// Контроль корректности проекции и справочных данных по проекции
// исходного материала
// Входные данные:
// projection - проекция исходного материала
// describe - справочные данные по проекции исходного материала
// Возврат: код ошибки
long int _fastcall ttrTestConstProjectionEx(int projection,
                                            CONSTPROJ * describe);

// Определение номера зоны по долготе осевого меридиана
// Входные данные:
// l - долгота осевого меридиана в радианах
// Выходные данные:
// LAxisMeridianZone - долгота осевого меридиана зоны в радианах
// NumberZone - номер зоны
void _fastcall ttrIdentifyZone(TRANSLATE * data, double l);

// Запросить номер зоны для топографических карт
int _fastcall ttrGetNumberZone(TRANSLATE * data);

// Установка номера зоны и осевого меридиана по номеру зоны
int _fastcall ttrSetNumberZone(TRANSLATE * data, int numberZone);

// Установка номера зоны и осевого меридиана по долготе
int _fastcall ttrSetNumberZoneByL(TRANSLATE * data, double l);

//*********************************************************************
// Программы перевода координат X,Y точки в системе Гаусса-Крюгера
// (цилиндрической проекции) и геодезических координат точки B,L
//*********************************************************************
#endif  // BUILD_DLL  

// Вычисление геодезических координат точки B,L (цилиндрической
// проекции по прямоугольным координатам точки X,Y
// в системе Гаусса-Крюгера
// Входные данные:
// x,y - координаты точки в системе Гаусса-Крюгера в метрах
// Выходные данные:
// b,l - широта и долгота точки в радианах
void _fastcall ttrXY2BL_CYL(TRANSLATE * data, double x,  double y,
                                              double *b, double *l);

// Вычисление прямоугольных координат X,Y точки в системе Гаусса-Крюгера
// (цилиндрической проекции) по геодезическим координатам точки B,L
// Входные данные:
// b,l - геодезические координаты точки в радианах
// Выходные данные:
// x,y - координаты точки в системе Гаусса-Крюгера в метрах
void _fastcall ttrBL2XY_CYL(TRANSLATE * data, double b,  double l,
                                              double *x, double *y);
//*********************************************************************

//********************************************************************
// Программы перевода прямоугольных координат точки X,Y и
// геодезических координат точки B,L в системе Гаусса-Крюгера
//********************************************************************

// Определение геодезических координат B и L по прямоугольным X и Y
// Формулы:Пособие по перевычислению координат
// Входные данные:
// x,y - координаты точки в системе Гаусса-Крюгера в метрах
// Выходные данные:
// b,l - широта и долгота точки в радианах
void _fastcall ttrXY2BL_GK(TRANSLATE * data, double x,  double y,
                                             double *b, double *l);

// Определение прямоугольных координат X и Y по геодезическим B и L
// Формулы:Пособие по перевычислению координат
// Входные данные:
// b,l - геодезические координаты точки в радианах
// Выходные данные:
// x,y - координаты точки в системе Гаусса-Крюгера в метрах
void _fastcall ttrBL2XY_GK(TRANSLATE * data, double b,  double l,
                                             double *x, double *y);
//*********************************************************************

//*********************************************************************
// Программы перевода координат X,Y точки в системе Гаусса-Крюгера и
// геодезических координат точки B,L(равноугольная коническая проекция)
//*********************************************************************

// Вычисление геодезических координат точки B,L(равноугольной конической
// проекции) по координатам точки X,Y в системе Гаусса-Крюгера
// Входные данные:
// x,y - координаты точки в системе Гаусса-Крюгера в метрах
// Выходные данные:
// b,l - широта и долгота точки в радианах
void _fastcall ttrXY2BL_CON(TRANSLATE * data, double x,  double y,
                                              double *b, double *l);

// Вычисление координат X,Y точки в системе Гаусса-Крюгера(равноугольной
// конической проекции) по геодезическим координатам точки B,L
// Входные данные:
// b,l - геодезические координаты точки в радианах
// Выходные данные:
// x,y - координаты точки в системе Гаусса-Крюгера в метрах
void _fastcall ttrBL2XY_CON(TRANSLATE * data, double b,  double l,
                                              double *x, double *y);
//*********************************************************************

//*********************************************************************
// Программы перевода координат X,Y точки  и геодезических координат
// точки B,L(цилиндрическая специальная проекция - "бланковка")
//*********************************************************************

// Вычисление геодезических координат точки B,L по координатам
// точки X,Y в цилиндрической специальной проекции ("бланковка")
// Входные данные:
// x,y - координаты точки в метрах
// Выходные данные:
// b,l - широта и долгота точки в радианах
void _fastcall ttrXY2BL_BLANK(double x, double y, double *b, double *l);

// Вычисление координат X,Y точки по геодезическим координатам
// точки B,L в цилиндрической специальной проекции ("бланковка")
// Входные данные:
// b,l - геодезические координаты точки в радианах
// Выходные данные:
// x,y - координаты точки в метрах
void _fastcall ttrBL2XY_BLANK(double b, double l, double *x, double *y);

//*********************************************************************
// Программы перевода координат X,Y точки  и геодезических координат
// точки B,L(специальная проекция - "Глобус")      
//*********************************************************************

// Вычисление геодезических координат точки B,L по координатам
// точки X,Y в специальной проекции ("Глобус")
// Входные данные:
// x,y - координаты точки в метрах
// Выходные данные:
// b,l - широта и долгота точки в радианах
void _fastcall ttrXY2BL_GLOBE(double x, double y, double *b, double *l);

// Вычисление координат X,Y точки по геодезическим координатам
// точки B,L в специальной проекции ("Глобус")
// Входные данные:
// b,l - геодезические координаты точки в радианах
// Выходные данные:
// x,y - координаты точки в метрах
void _fastcall ttrBL2XY_GLOBE(double b, double l, double *x, double *y);
//*********************************************************************

//*********************************************************************
// Перевод геодезических координат из одной системы в другую
// и в прямоугольные в системе NAHRWAN (эллипсоид Кларка 1880г.)
//*********************************************************************
// Перевод геодезических координат из системы 1942г.
//(эллипсоид Красовского) в систему ПЗ-90(общеземной эллипсоид ПЗ-90)
// Входные данные:
// double b - широта точки в радианах
// double l - долгота точки в радианах
// double h - высота в метрах
// Выходные данные:
// double br - широта точки в радианах
// double lr - долгота точки в радианах
// double hr - высота в метрах
void _fastcall ttrBL422BLEC90(double  b,  double  l,  double  h,
                              double *br, double *lr, double *hr);

// Перевод геодезических координат из системы 1942г.
//(эллипсоид Красовского) в систему ГСК-2011(эллипсоид ГСК-2011)
// Входные данные:
// double b - широта точки в радианах
// double l - долгота точки в радианах
// double h - высота в метрах
// Выходные данные:
// double br - широта точки в радианах
// double lr - долгота точки в радианах
// double hr - высота в метрах
void _fastcall ttrBL422BLGSK2011(double  b,  double  l,  double  h,
                              double *br, double *lr, double *hr);

// Перевод геодезических координат из системы 1942г.
//(эллипсоид Красовского) в систему WGS-84(общеземной эллипсоид WGS-84)
// Входные данные:
// double b - широта точки в радианах
// double l - долгота точки в радианах
// double h - высота в метрах
// Выходные данные:
// double br - широта точки в радианах
// double lr - долгота точки в радианах
// double hr - высота в метрах
void _fastcall ttrBL422BLWGS84(double b,   double l,   double h,
                               double *br, double *lr, double *hr);

// Перевод геодезических координат из системы 1942г.
//(эллипсоид Красовского) в систему NAHRWAN (эллипсоид Кларка 1880г.)
// Входные данные:
// double b - широта точки в радианах
// double l - долгота точки в радианах
// double h - высота в метрах
// Выходные данные:
// double br - широта точки в радианах
// double lr - долгота точки в радианах
// double hr - высота в метрах
#ifdef  BUILD_DLL  
void _fastcall ttrBL422BLNAHRWAN(double b,   double l,   double h,
                                 double *br, double *lr, double *hr);
#endif   // BUILD_DLL  

// Перевод геодезических координат из ПЗ-90 (общеземной эллипсоид ПЗ-90)
// в систему 1942 г(эллипсоид Красовского)
// Входные данные:
// double b - широта точки в радианах
// double l - долгота точки в радианах
// double h - высота в метрах
// Выходные данные:
// double br - широта точки в радианах
// double lr - долгота точки в радианах
// double hr - высота в метрах
void _fastcall ttrBLEC902BL42(double  b,  double  l,  double  h,
                              double *br, double *lr, double *hr);

// Перевод геодезических координат из ГСК-2011 (эллипсоид ГСК-2011)
// в систему 1942 г(эллипсоид Красовского)
// Входные данные:
// double b - широта точки в радианах
// double l - долгота точки в радианах
// double h - высота в метрах
// Выходные данные:
// double br - широта точки в радианах
// double lr - долгота точки в радианах
// double hr - высота в метрах
void _fastcall ttrBLGSK20112BL42(double  b,  double  l,  double  h,
                              double *br, double *lr, double *hr);


// Перевод геодезических координат из системы WGS-84 (общеземной эллипсоид WGS-84)
// в систему 1942 г(эллипсоид Красовского)
// Входные данные:
// double b - широта точки в радианах
// double l - долгота точки в радианах
// double h - высота в метрах
// Выходные данные:
// double br - широта точки в радианах
// double lr - долгота точки в радианах
// double hr - высота в метрах
void _fastcall ttrBLWGS842BL42(double b,   double l,   double h,
                               double *br, double *lr, double *hr);

#ifdef  BUILD_DLL  
// Перевод геодезических координат из системы NAHRWAN(эллипсоид Кларка 1880г.)
// в систему 1942 г(эллипсоид Красовского)
// Входные данные:
// double b - широта точки в радианах
// double l - долгота точки в радианах
// double h - высота в метрах
// Выходные данные:
// double br - широта точки в радианах
// double lr - долгота точки в радианах
// double hr - высота в метрах
void _fastcall ttrBLNAHRWAN2BL42(double b,   double l,   double h,
                                 double *br, double *lr, double *hr);

// Перевод геодезических координат из системы 1942г.
// (эллипсоид Красовского) в прямоугольные в системе NAHRWAN
// (эллипсоид Кларка 1880г.)
// Входные данные:
// double b - широта точки в радианах
// double l - долгота точки в радианах
// double h - высота в метрах
// Выходные данные:
// double x,y - прямоугольные координаты точки в метрах
void _fastcall ttrBL422XYNAHRWAN(double  b,   double  l,   double h,
                                 double *x,   double *y);
#endif   // BUILD_DLL  

#define ttrBL2BL ttrBL2BL_03                      
// Перевод геодезических координат из одной системы в другую
// Входные данные:
// double b - широта точки в радианах
// double l - долгота точки в радианах
// double h - высота в метрах
// int flag - флаг, указывающий в какую систему переводить
//            1- геодезические координаты в системе 1942г.
//               (эллипсоид Красовского) в систему ПЗ-90
//               (общеземной эллипсоид ПЗ-90)
//            2- геодезические координаты в системе ПЗ-90
//               (общеземной эллипсоид ПЗ-90) в систему WGS-84
//               (общеземной эллипсоид WGS-84)
//            3- геодезические координаты в системе WGS-84
//               (общеземной эллипсоид WGS-84) в систему NAHRWAN
//               (эллипсоид Кларка 1880г.)
//            4- геодезические координаты в системе ПЗ-90
//               (общеземной эллипсоид ПЗ-90) в систему 1942г.
//               (эллипсоид Красовского)
//            5- геодезические координаты в системе WGS-84
//               (общеземной эллипсоид WGS-84) в систему ПЗ-90
//               (общеземной эллипсоид ПЗ-90)
//            6- геодезические координаты в системе NAHRWAN
//               (эллипсоид Кларка 1880г.) в систему WGS-84
//               (общеземной эллипсоид WGS-84)
//            7- геодезические координаты в системе 1995г.
//               (эллипсоид Красовского) в систему ПЗ-90
//               (общеземной эллипсоид ПЗ-90)
//            8- геодезические координаты в системе ПЗ-90
//               (общеземной эллипсоид ПЗ-90) в систему 1995г.
//               (эллипсоид Красовского)
//            9- геодезические координаты в системе ПЗ-90.11
//               (общеземной эллипсоид ПЗ-90) в систему ГСК-2011
//               (эллипсоид ГСК-2011)
//            10- геодезические координаты в системе ГСК-2011
//               (эллипсоид ГСК-2011) в систему ПЗ-90.11
//               (общеземной эллипсоид ПЗ-90)
//            11- геодезические координаты в системе СК-42
//               (эллипсоид Красовского) в систему ГСК-2011
//               (эллипсоид ГСК-2011)
//            12- геодезические координаты в системе ГСК-2011
//               (Эллипсоид ГСК-2011) в систему СК-42
//               (эллипсоид Красовского)
//            13- геодезические координаты в системе ГСК-2011
//               (эллипсоид ГСК-2011) в систему WGS-84
//               (общеземной эллипсоид WGS-84)
//            14- геодезические координаты в системе WGS-84
//               (общеземной эллипсоид WGS-84) в систему ГСК-2011
//               (эллипсоид ГСК-2011)
// Выходные данные:
// double br - широта точки в радианах
// double lr - долгота точки в радианах
// double hr - высота в метрах

// Точность 0.3 м
void _fastcall ttrBL2BL_03(double b,   double l,   double h,    
                        double *br, double *lr, double *hr,
                        int    flag);


//Функции перевода систем координат ПЗ-90 <-> ПЗ-90.02 <-> ПЗ-90.11 (общеземной эллипсоид ПЗ-90)
//--------------------------------------------------------------------
// Точность 0.3 м
// Входные данные:
// double b - широта точки в радианах
// double l - долгота точки в радианах
// double h - высота в метрах
// int flag    - флаг, указывающий в какую систему переводить
//            1- геодезические координаты в системе ПЗ-90.11 в систему ПЗ-90.02
//            2- геодезические координаты в системе ПЗ-90.02 в систему ПЗ-90.11
//            3- геодезические координаты в системе ПЗ-90.11 в систему ПЗ-90
//            4- геодезические координаты в системе ПЗ-90 в систему ПЗ-90.11
//            5- геодезические координаты в системе ПЗ-90.02 в систему ПЗ-90
//            6- геодезические координаты в системе ПЗ-90 в систему ПЗ-90.02
// Выходные данные:
// double br - широта точки в радианах
// double lr - долгота точки в радианах
// double hr - высота в метрах
//--------------------------------------------------------------------
void _fastcall ttrBL2BL_EC90XX(double b,   double l,   double h,
                           double *br, double *lr, double *hr,
                           int flag);


// Перевод геодезических координат в прямоугольные
// Входные данные:
// double b - широта точки в радианах
// double l - долгота точки в радианах
// Выходные данные:
// double x,y - прямоугольные координаты точки в метрах
void _fastcall ttrBL2XYNAHRWAN(double b,   double l,
                               double *x,  double *y);


//*********************************************************************

//---------------------------------------------------------------------
// Перевод геодезических координат из системы 1942г.
//(эллипсоид Красовского) в систему ПЗ-90(общеземной эллипсоид ПЗ-90)
// Входные данные:
// double b - широта точки в радианах
// double l - долгота точки в радианах
// double h - высота в метрах
// Выходные данные:
// double br - широта точки в радианах
// double lr - долгота точки в радианах
// double hr - высота в метрах
//--------------------------------------------------------------------
#ifdef  BUILD_DLL  
inline void _fastcall ttrBL422BLEC90(double  b,  double  l,  double  h,
                                     double *br, double *lr, double *hr)
{
  ttrBL2BL_03(b, l, h, br, lr, hr, 1);   // ttrBL2BL - 
}
#endif  // BUILD_DLL  

//---------------------------------------------------------------------
// Перевод геодезических координат из системы 1942г.
//(эллипсоид Красовского) в систему ГСК-2011(эллипсоид ГСК-2011)
// Входные данные:
// double b - широта точки в радианах
// double l - долгота точки в радианах
// double h - высота в метрах
// Выходные данные:
// double br - широта точки в радианах
// double lr - долгота точки в радианах
// double hr - высота в метрах
//--------------------------------------------------------------------
#ifdef  BUILD_DLL  
inline void _fastcall ttrBL422BLGSK2011(double  b,  double  l,  double  h,
                                     double *br, double *lr, double *hr)
{
  ttrBL2BL_03(b, l, h, br, lr, hr, 11);
}
#endif  // BUILD_DLL


//---------------------------------------------------------------------
// Перевод геодезических координат из системы ГСК-2011
//(эллипсоид ГСК-2011) в систему ПЗ-90(общеземной эллипсоид ПЗ-90)
// Входные данные:
// double b - широта точки в радианах
// double l - долгота точки в радианах
// double h - высота в метрах
// Выходные данные:
// double br - широта точки в радианах
// double lr - долгота точки в радианах
// double hr - высота в метрах
//--------------------------------------------------------------------
inline void _fastcall ttrBLGSK20112BLEC90(double  b,  double  l,  double  h,
                                     double *br, double *lr, double *hr)
{
  ttrBL2BL_03(b, l, h, br, lr, hr, 10);
}


//---------------------------------------------------------------------
// Перевод геодезических координат из системы 1995г.
//(эллипсоид Красовского) в систему ПЗ-90(общеземной эллипсоид ПЗ-90)
// Входные данные:
// double b - широта точки в радианах
// double l - долгота точки в радианах
// double h - высота в метрах
// Выходные данные:
// double br - широта точки в радианах
// double lr - долгота точки в радианах
// double hr - высота в метрах
//--------------------------------------------------------------------
inline void _fastcall ttrBL952BLEC90(double  b,  double  l,  double  h,
                                     double *br, double *lr, double *hr)
{
  ttrBL2BL_03(b, l, h, br, lr, hr, 7);
}

#ifdef  BUILD_DLL  
//---------------------------------------------------------------------
// Перевод геодезических координат из системы 1942г.
//(эллипсоид Красовского) в систему WGS-84(общеземной эллипсоид WGS-84)
// Входные данные:
// double b - широта точки в радианах
// double l - долгота точки в радианах
// double h - высота в метрах
// Выходные данные:
// double br - широта точки в радианах
// double lr - долгота точки в радианах
// double hr - высота в метрах
//--------------------------------------------------------------------
inline void _fastcall ttrBL422BLWGS84(double b,   double l,   double h,
                                      double *br, double *lr, double *hr)
{
 double bw, lw, hw;

 ttrBL422BLEC90(b, l, h, &bw, &lw, &hw);
 ttrBL2BL_03(bw, lw, hw, br, lr, hr, 2);  // ttrBL2BL - 
}

//--------------------------------------------------------------------
// Перевод геодезических координат из ПЗ-90 (общеземной эллипсоид ПЗ-90)
// в систему 1942 г(эллипсоид Красовского)
// Входные данные:
// double b - широта точки в радианах
// double l - долгота точки в радианах
// double h - высота в метрах
// Выходные данные:
// double br - широта точки в радианах
// double lr - долгота точки в радианах
// double hr - высота в метрах
//--------------------------------------------------------------------
inline void _fastcall ttrBLEC902BL42(double  b,  double  l,  double  h,
                                     double *br, double *lr, double *hr)
{
  ttrBL2BL_03(b, l, h, br, lr, hr, 4);          
}

//--------------------------------------------------------------------
// Перевод геодезических координат из ГСК-2011 (эллипсоид ГСК-2011)
// в систему 1942 г(эллипсоид Красовского)
// Входные данные:
// double b - широта точки в радианах
// double l - долгота точки в радианах
// double h - высота в метрах
// Выходные данные:
// double br - широта точки в радианах
// double lr - долгота точки в радианах
// double hr - высота в метрах
//--------------------------------------------------------------------
inline void _fastcall ttrBLGSK20112BL42(double  b,  double  l,  double  h,
                                     double *br, double *lr, double *hr)
{
  ttrBL2BL_03(b, l, h, br, lr, hr, 12);
}
#endif // BUILD_DLL

//--------------------------------------------------------------------
// Перевод геодезических координат из ПЗ-90 (общеземной эллипсоид ПЗ-90)
// в систему 1995 г(эллипсоид Красовского)
// Входные данные:
// double b - широта точки в радианах
// double l - долгота точки в радианах
// double h - высота в метрах
// Выходные данные:
// double br - широта точки в радианах
// double lr - долгота точки в радианах
// double hr - высота в метрах
//--------------------------------------------------------------------
inline void _fastcall ttrBLEC902BL95(double  b,  double  l,  double  h,
                                     double *br, double *lr, double *hr)
{
  ttrBL2BL_03(b, l, h, br, lr, hr, 8);
}

//--------------------------------------------------------------------
// Перевод геодезических координат из ПЗ-90 (общеземной эллипсоид ПЗ-90)
// в систему ГСК-2011 г(эллипсоид ГСК-2011)
// Входные данные:
// double b - широта точки в радианах
// double l - долгота точки в радианах
// double h - высота в метрах
// Выходные данные:
// double br - широта точки в радианах
// double lr - долгота точки в радианах
// double hr - высота в метрах
//--------------------------------------------------------------------
inline void _fastcall ttrBLEC902BLGSK2011(double  b,  double  l,  double  h,
                                     double *br, double *lr, double *hr)
{
  ttrBL2BL_03(b, l, h, br, lr, hr, 9);
}


#ifdef  BUILD_DLL  
//--------------------------------------------------------------------
// Перевод геодезических координат из системы WGS-84 (общеземной эллипсоид WGS-84)
// в систему 1942 г(эллипсоид Красовского)
// Входные данные:
// double b - широта точки в радианах
// double l - долгота точки в радианах
// double h - высота в метрах
// Выходные данные:
// double br - широта точки в радианах
// double lr - долгота точки в радианах
// double hr - высота в метрах
//--------------------------------------------------------------------
inline void _fastcall ttrBLWGS842BL42(double b,   double l,   double h,
                                      double *br, double *lr, double *hr)
{
 double bw, lw, hw;

 ttrBL2BL_03(b, l, h, &bw, &lw, &hw, 5);           
 ttrBLEC902BL42(bw, lw, hw, br, lr, hr);
}

//*********************************************************************

// Перевод геодезических координат из системы UTMNAD27 (эллипсоид Кларка 1866г.)
// в систему 1942 г (эллипсоид Красовского)
// Входные данные:
// double b - широта точки в радианах
// double l - долгота точки в радианах
// Выходные данные:
// double br - широта точки в радианах
// double lr - долгота точки в радианах
void _fastcall ttrBLUTMNAD27CLARKE662BL42(double b,   double l,            
                                          double *br, double *lr);

// Перевод геодезических координат из системы 1942 г (эллипсоид Красовского)
// в систему UTMNAD27 (эллипсоид Кларка 1866г.)
// Входные данные:
// double b - широта точки в радианах
// double l - долгота точки в радианах
// Выходные данные:
// double br - широта точки в радианах
// double lr - долгота точки в радианах
void _fastcall ttrBL422BLUTMNAD27CLARKE66(double b,   double l,            
                                          double *br, double *lr);

// Пересчет координат B, L из одной системы координат в другую
//1. Перевод геодезических координат из системы UTMNAD27 (эллипсоид Кларка 1866г.)
//   в систему 1942 г (эллипсоид Красовского)
//2. Перевод геодезических координат из системы 1942 г (эллипсоид Красовского)
//   в систему UTMNAD27 (эллипсоид Кларка 1866г.)
//3. Перевод геодезических координат из системы 1942г. (эллипсоид Красовского)
//   в систему WGS-84(общеземной эллипсоид WGS-84)
//4. Перевод геодезических координат из системы WGS-84 (общеземной эллипсоид WGS-84)
//   в систему 1942 г(эллипсоид Красовского)
// Входные данные:
// double b - широта точки в радианах
// double l - долгота точки в радианах
// double h - высота в метрах
// int inellipsoide  - вид эллипсоида (исходного)
// int outellipsoide  - вид эллипсоида (выходного)
// Выходные данные:
// double b - широта точки в радианах
// double l - долгота точки в радианах
// double h - высота в метрах
// Код возврата равен 0 - если пересчета не было
// Код возврата равен 1 - если пересчет был
int _fastcall ttrBLTransform(int inellipsoide,         // Вид эллипсоида
                             int outellipsoide,        // Вид эллипсоида
                             double* b, double* l, double* h);      

//*********************************************************************
// Программы перевода геодезических и прямоугольных координат точки
// для систем 1942г. и WGS-84
//*********************************************************************

// Инициализация системы WGS84 и проекции UTM
void _fastcall ttrInitUTMforWGS84(TRANSLATE * data);

// Инициализация системы NAD27 и проекции UTM на эллипсоиде Кларка
void _fastcall ttrInitUTMforNAD27(TRANSLATE * data);    

// Инициализация системы XXX и проекции UTM на эллипсоиде XXX
void _fastcall ttrInitUTM(TRANSLATE * data);    

void _fastcall ttrInitGKfor42(TRANSLATE * data);

void _fastcall ttrInitCK63(TRANSLATE * data);   

// Вычисление номера зоны
void _fastcall ttrInitNumberZone_in_Ill(TRANSLATE * data, double y);
void _fastcall ttrInitNumberZone_in_Ill_l(TRANSLATE * data, double l);

// Запросить номер зоны для топографических карт
void _fastcall ttrInitSphericalMercator(TRANSLATE * data);

// Запросить номер зоны для топографических карт
long _fastcall ttrGetNumberZone_in_Ill(TRANSLATE * data);

// Установка номера зоны и осевого меридиана по номеру зоны
long _fastcall ttrSetNumberZone_in_Ill(TRANSLATE * data, long numberzone);

// Вычисление осевого меридиана по номеру зоны                  
// Вычисление осевого меридиана по номеру зоны                  
double _fastcall ttrCalcAxisMeridianByNumberZone_in_Ill(TRANSLATE * data, long numberzone);
#endif  // BUILD_DLL  

// Вычисление геодезических координат на текущем эллипсоиде
void _fastcall ttrXY2BL_TM(TRANSLATE * data, double x,  double y,
                                                 double *b, double *l);

// Вычисление прямоугольных координат на текущем эллипсоиде
void _fastcall ttrBL2XY_TM(TRANSLATE * data, double b,  double l,
                                                 double *x, double *y);

#ifdef  BUILD_DLL  
// Вычисление геодезических координат на текущем эллипсоиде
void _fastcall ttrXY2BL_TM_1(TRANSLATE * data, double x,  double y,
                                                   double *b, double *l);

// Вычисление прямоугольных координат на текущем эллипсоиде
void _fastcall ttrBL2XY_TM_1(TRANSLATE * data, double b,  double l,
                                                   double *x, double *y);
//*********************************************************************

// Перевод радиан в градусы, минуты, секунды
// возвращает знак 0: число >= 0,
//                 1: число < 0
int _fastcall trgRadianToGradMinSec(double radian,
                              int *grad, int *minute, double *second);

// Перевод градусов, минут, секунд в радианы
// sign - знак     0: число >= 0,
//                 1: число < 0
double _fastcall trgGradMinSecToRadian(int grad,      int minute,
                                       double second, int sign);

// Перевод градусов в радианы
double _fastcall trgGradToRadian(double gradus);

// Перевод радиан в градусы
double _fastcall trgRadianToGrad(double radian);
#endif  // BUILD_DLL  

// Приведение градусов, минут, секунд к нормальному виду
// градусы < 360, минуты < 60, секунды < 60
int _fastcall trgGradNormalize(int *grad, int *minute, double *second);


#endif  // TRANSLATE_H

